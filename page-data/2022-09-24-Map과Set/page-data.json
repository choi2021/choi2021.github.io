{"componentChunkName":"component---src-templates-post-jsx","path":"/2022-09-24-Map과Set/","result":{"data":{"site":{"siteMetadata":{"title":"Troy DevLog"}},"markdownRemark":{"id":"cd30073c-7f4c-54d8-b893-090480da82c3","excerpt":"Map과 Set은 자바스크립트의 자료구조로, map은 Object와 유사한 구조를 가지고, Set은 중복을 없애주는 등에 사용된다. 유용한 자료구조이기에 정리를 한번 해보려 한다. Set Set 자료형은 위에 언급한대로 데이터의 중복을 없을 뿐 아니라 배열과 달리 순서를 가지지도 않는 특징을 가진다. 1. Set 만들기 set은 간단하게 class를 사용…","html":"<p>Map과 Set은 자바스크립트의 자료구조로, map은 Object와 유사한 구조를 가지고, Set은 중복을 없애주는 등에 사용된다. 유용한 자료구조이기에 정리를 한번 해보려 한다.</p>\n<h2>Set</h2>\n<p>Set 자료형은 위에 언급한대로 데이터의 중복을 없을 뿐 아니라 배열과 달리 순서를 가지지도 않는 특징을 가진다.</p>\n<h3>1. Set 만들기</h3>\n<p>set은 간단하게 class를 사용하듯이 new를 이용해서 만들 수 있고, 내부 값을 전해줄 수 있는데 이때 주의할 점은 iterable한 값을 전달해주어야 한다.</p>\n<p>앞서 정리했던 iterable한 값으로, array, 문자열, Object의 keys, values등을 전달해줄 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> set <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>set<span class=\"token punctuation\">)</span> <span class=\"token comment\">//Set(4) {'h', 'e', 'l','l', 'o'}</span>\n\n<span class=\"token keyword\">const</span> set2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>set2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//Set(4) {1, 2, 3, 4}</span></code></pre></div>\n<h3>2. 추가,삭제</h3>\n<p>추가,삭제를 위해서는, Set의 instance레벨의 함수인 <strong>add</strong>와 <strong>delete</strong>를 이용해야한다. 내부 값을 모두 삭제하고 싶을 때는 <strong>clear</strong>를 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> set <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nset<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//Set(5) {1, 2, 3, 4, 5}</span>\nset<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//Set(4) {1, 2, 4, 5}</span>\nset<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//Set(0) {size: 0}</span></code></pre></div>\n<h3>3. 길이와 포함여부</h3>\n<p>Set의 길이는 배열의 length와 다르게 <strong>size</strong>를 이용해서 얻을 수 있으며, 특정 자료를 가지고 있는지 <strong>has</strong>를 통해 알 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> set <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nset<span class=\"token punctuation\">.</span>size <span class=\"token comment\">//4</span>\nset<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span>\nset<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span></code></pre></div>\n<h3>4. 활용</h3>\n<p>set는 유일한 데이터만을 가지기 때문에 자주 쓰이는 배열내부의 중복되는 데이터를 정리하는데 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> duplicatedItems <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">const</span> uniqueItems <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span>duplicatedItems<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">//(5) [1, 2, 3, 4, 5]</span></code></pre></div>\n<h3>주의점</h3>\n<p>Set자료형이 유일한 데이터를 가지지만 주의할 점으로, set에 객체가 있다면 객체의 참조값을 가지고 있기에 주소값으로 동일한 데이터인지 확인한다. 그렇기에 객체의 내부 속성이 달라진다면 set내부의 객체의 값이 달라지고, 만약 속성이 동일한 두개의 객체가 있다면, 둘의 참조값이 다르기 때문에 모두 set에 추가된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"choi\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> set <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nset<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span>\nobj<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"park\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>set<span class=\"token punctuation\">)</span> <span class=\"token comment\">//name이 park로 바뀌어있어</span>\n\n<span class=\"token keyword\">const</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"park\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nset<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//obj와 obj2 모두 set에 포함되어 있어</span></code></pre></div>\n<h1>Map</h1>\n<p>map을 처음 배웠을 때 느꼈던 부분은 \"object\"와 너무 비슷하다는 점이었다. object와 동일하게 key와 value로 값을 저장해, 해당 key를 통해 값을 전달 받을 수 잇다. map은 앞서 정리한 set과 유사한 문법을 가지는 부분들이 있어 함께 정리했다.</p>\n<h3>1.map 만들기</h3>\n<p>set과 동일하게 new Map()을 통해서 새로 만들 수 있으며, 바로 값을 전달할 때는 배열의 형태로 [key,value]로 전달해주어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//Map(2) {'1' => 1, '2' => 2}</span></code></pre></div>\n<h3>2. get,set,delete,clear</h3>\n<p>map은 추가를 위한 <strong>set</strong>, key를 이용해 값을 불러오는 <strong>get</strong>, 값을 삭제하기 위한 <strong>delete</strong>, 내부 값을 모두 삭제하고 싶을 때는 <strong>clear</strong>를 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"choi\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//Map(1) {'name' => 'choi'}</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//choi</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//Map(0) {size: 0}</span>\n\n<span class=\"token keyword\">const</span> map2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//Map(2) {'1' => 1, '2' => 2}</span>\nmap2<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//Map(0) {size: 0}</span></code></pre></div>\n<h3>3. 길이와 iterator</h3>\n<p>map의 길이는 set과 동일하게 <strong>size</strong>를 이용해서 얻을 수 있으며, object와 같이 <strong>iterator</strong>들을 이용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"choi\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//Map(1) {'name' => 'choi'}</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"26\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//Map(2) {'name' => 'choi', 'age' => '26'}</span>\n\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> key</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">/*\nchoi name\n26 age\n*/</span>\n\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//MapIterator {'name', 'age'}</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//MapIterator {'choi', '26'}</span>\nmap<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//MapIterator {'name' => 'choi', 'age' => '26'}</span></code></pre></div>\n<h3>4. Object와 다른점</h3>\n<p>앞서 언급한 대로 Key와 value로 이루어져 Object와 매우 유사한 구조를 가지지만 Object와는 다른 방식을 이용해 값을 추가하고 삭제한다. 한마디로 둘은 <strong>Interface</strong>가 다르다고 할 수 있다.</p>","frontmatter":{"title":"Map과 Set","date":"September 24, 2022","tags":["javascript"],"series":null},"fields":{"slug":"/2022-09-24-Map과Set/","readingTime":{"minutes":5.125}}},"seriesList":{"edges":[{"node":{"id":"4dd6f66b-f311-5b91-9eac-28095d67106f","fields":{"slug":"/2022-09-06-BEM과-자료형/"},"frontmatter":{"title":"BEM과 자바스크립트의 자료형"}}},{"node":{"id":"484c98ee-5762-55db-84b4-6b21ae960acf","fields":{"slug":"/2022-09-07-자바스트립트의-두가지-복사방법/"},"frontmatter":{"title":"자바스크립트의 두가지 복사 방법"}}},{"node":{"id":"352ba125-5786-518a-9c7a-303042a0755f","fields":{"slug":"/2022-09-07-자바스크립트의-타입과연산자/"},"frontmatter":{"title":"자바스크립트의 타입과 연산자"}}},{"node":{"id":"10db5919-95c0-53f5-94be-dcbac01e5d37","fields":{"slug":"/2022-09-10-intersection-observer /"},"frontmatter":{"title":"Intersection observer"}}},{"node":{"id":"5b188256-9365-5320-a67f-97afab6d630f","fields":{"slug":"/2022-09-12-브라우저API/"},"frontmatter":{"title":"Browser API"}}},{"node":{"id":"db56d225-cd7a-5168-8079-35d6d038e94f","fields":{"slug":"/2022-09-13-함수/"},"frontmatter":{"title":"함수"}}},{"node":{"id":"80cd5d8e-ad25-5b3f-921a-53a5f16a9bd5","fields":{"slug":"/2022-09-14-객체/"},"frontmatter":{"title":"객체"}}},{"node":{"id":"44dc8bd6-7888-58d2-b3fb-124760fd2e55","fields":{"slug":"/2022-09-17-빌트인객체/"},"frontmatter":{"title":"빌트인 객체"}}},{"node":{"id":"75d48151-20bb-5d55-9b13-7c77c923e577","fields":{"slug":"/2022-09-19-array/"},"frontmatter":{"title":"Array"}}},{"node":{"id":"962839d3-d3ea-5820-a045-07d3cdaa0079","fields":{"slug":"/2022-09-22-iteration/"},"frontmatter":{"title":"Iteration"}}},{"node":{"id":"cd30073c-7f4c-54d8-b893-090480da82c3","fields":{"slug":"/2022-09-24-Map과Set/"},"frontmatter":{"title":"Map과 Set"}}},{"node":{"id":"900f53ea-b7eb-5996-b44b-626400cf9d87","fields":{"slug":"/2022-10-06-HTTP란/"},"frontmatter":{"title":"HTTP 정리"}}},{"node":{"id":"458970f3-d49a-5b5f-8975-6f084e4ab43b","fields":{"slug":"/2022-10-18-Node-JS-기초/"},"frontmatter":{"title":"Node js:NodeJS 이용한 서버 만들기"}}},{"node":{"id":"f0792841-794b-5ec0-a351-a2f7605adc40","fields":{"slug":"/2022-10-19-Express-기초/"},"frontmatter":{"title":"NodeJS: express"}}},{"node":{"id":"d2bb44f2-60ad-5ed7-90ab-2bf43c831572","fields":{"slug":"/2022-11-18-CSR과-SSR/"},"frontmatter":{"title":"CSR과 SSR 그리고 Universal Rendering"}}},{"node":{"id":"cb62a84f-d1d5-5894-8175-64624d84a372","fields":{"slug":"/2022-11-20-스코프-실행컨테스트-클로저/"},"frontmatter":{"title":"스코프,실행컨텍스트,클로저"}}},{"node":{"id":"3b08f6c0-b947-5562-b38c-1228108dd551","fields":{"slug":"/2022-11-24-Critical-Rendering-Path/"},"frontmatter":{"title":"💻 Critical Rendering Path"}}},{"node":{"id":"9735256f-9deb-5bc5-a7a3-9d68d3278b4a","fields":{"slug":"/2022-11-27-비동기와-프로미스/"},"frontmatter":{"title":"비동기와 프로미스"}}},{"node":{"id":"ce607981-e768-5fdf-96d7-5d026072082f","fields":{"slug":"/2022-11-30-지스트-청원-서비스-회고/"},"frontmatter":{"title":"지스트 청원서비스 회고"}}},{"node":{"id":"f6194d07-b810-5332-9cbc-da0ce80eb312","fields":{"slug":"/2022-12-02-제너레이터와-async-await/"},"frontmatter":{"title":"제너레이터와 Async-Await"}}},{"node":{"id":"ad48afd5-0612-56fe-a974-7edb7de83a74","fields":{"slug":"/2022-12-03-모으잡-리팩토링/"},"frontmatter":{"title":"모으잡-check box 수정, react-query 커스텀 훅, 크롤링 이슈"}}},{"node":{"id":"2776079b-37ef-5268-9738-de277120a7da","fields":{"slug":"/2022-12-05-호이스팅/"},"frontmatter":{"title":"호이스팅"}}},{"node":{"id":"01501fd0-6b11-5e0d-80ae-5f607d766625","fields":{"slug":"/2022-12-09-쿠키-session-jwt/"},"frontmatter":{"title":"Cookie,Session과 JWT"}}},{"node":{"id":"72347779-5753-5035-b978-e4569b4f14cf","fields":{"slug":"/2022-12-09-this/"},"frontmatter":{"title":"this"}}},{"node":{"id":"a64e2757-3cf3-5eb6-a560-d93cbc6b68b2","fields":{"slug":"/2022-12-10-http와https/"},"frontmatter":{"title":"http와 https"}}},{"node":{"id":"89b94977-8c1a-5723-af2b-1bf7c7750ebe","fields":{"slug":"/2022-12-12-생성자함수-프로토타입/"},"frontmatter":{"title":"생성자 함수, 프로토타입"}}},{"node":{"id":"5d40ad58-a897-564b-9a54-5c4a65ca9c0c","fields":{"slug":"/2022-12-30-이벤트/"},"frontmatter":{"title":"이벤트"}}},{"node":{"id":"93b78365-058d-511b-bb11-72485e3f0d70","fields":{"slug":"/2022-12-23-class/"},"frontmatter":{"title":"클래스"}}},{"node":{"id":"fe5c6476-9c85-50cc-938a-137246b45864","fields":{"slug":"/2023-01-23-Vite와-번들러/"},"frontmatter":{"title":"Vite는 왜 빠를까, 번들러에 대한 정리"}}},{"node":{"id":"94db5333-429d-592a-a409-e8f0a0c76354","fields":{"slug":"/2023-01-23-리액트의-기본원리/"},"frontmatter":{"title":"React study: 리액트의 기본 원리"}}},{"node":{"id":"80445e0b-511b-5e28-bde0-99498fbf3a5d","fields":{"slug":"/2022-12-20-리액트-성능보장/"},"frontmatter":{"title":"React study: 리액트가 성능을 보장하는 방법"}}},{"node":{"id":"782ca102-9c01-52ee-8b4d-b5432da4b448","fields":{"slug":"/2023-02-03-useState,useEffect, useRef, memo/"},"frontmatter":{"title":"React Study: useState, useEffect, useRef, memo"}}},{"node":{"id":"c1d41785-332b-595b-b9b8-0c7a719657c7","fields":{"slug":"/2023-02-17-취업준비-회고/"},"frontmatter":{"title":"신입으로 시작하며 작성하는 취준 회고"}}},{"node":{"id":"e06ed826-880e-5b59-ae78-c098858b0634","fields":{"slug":"/2023-02-21-google.com-입력했을때-일어나는-일/"},"frontmatter":{"title":"google.com를 브라우저에 검색했을 때 일어나는 일"}}},{"node":{"id":"aad7179c-dbc9-5851-a7fd-38251e0a508b","fields":{"slug":"/2023-03-01-CDN/"},"frontmatter":{"title":"CDN은 뭘까?"}}},{"node":{"id":"beed37b9-064d-581e-89d3-b4c43838e429","fields":{"slug":"/2023-03-05-디자인패턴/"},"frontmatter":{"title":"MVC, MVVM, Flux패턴 그리고 Service와 Repository 패턴"}}},{"node":{"id":"6f3b633d-c73e-5585-b597-edaa1d26c2bb","fields":{"slug":"/2023-03-31-2023년-3월회고/"},"frontmatter":{"title":"🐤 2023년 3월 회고"}}},{"node":{"id":"aed1969e-b959-5454-8c2f-52c4a0ec6e94","fields":{"slug":"/2023-05-06-2023년-4월회고/"},"frontmatter":{"title":"😎 2023년 4월 회고"}}},{"node":{"id":"a73d6084-a910-5da1-bcb0-f555558f6e3b","fields":{"slug":"/2023-06-05-2023년-5월회고/"},"frontmatter":{"title":"☀︎ 2023년 5월 회고"}}},{"node":{"id":"90c8982f-2982-5a80-bd85-6283a0f82d70","fields":{"slug":"/2023-07-06-2023년-6월회고/"},"frontmatter":{"title":"☼ 2023년 6월 회고"}}},{"node":{"id":"88fffefc-5bb1-5a85-b1aa-b0ac1d4bed94","fields":{"slug":"/2023-08-09-2023년-7월회고/"},"frontmatter":{"title":"☂︎ 2023년 7월 회고"}}},{"node":{"id":"e274816c-0eb9-5b42-93d0-823495b63d87","fields":{"slug":"/2023-09-09-2023년-8월회고/"},"frontmatter":{"title":"😊 2023년 8월 회고"}}},{"node":{"id":"0370cc06-a8be-5505-9714-383d053b476d","fields":{"slug":"/2023-10-03-2023년-9월회고/"},"frontmatter":{"title":"🚅 2023년 9월 회고"}}},{"node":{"id":"4eea6c19-13d8-5363-bc87-963f217b7a42","fields":{"slug":"/2023-11-01-2023년-10월회고/"},"frontmatter":{"title":"🧐 2023년 10월 회고"}}},{"node":{"id":"a2a6e999-a53d-5e52-aae6-d57a75673c5f","fields":{"slug":"/2023-12-02-2023년-11월회고/"},"frontmatter":{"title":"😃 2023년 11월 회고"}}},{"node":{"id":"ee90f174-21d6-5bbf-b2cf-6fd226bc9353","fields":{"slug":"/2023-12-31-2023년-12월회고/"},"frontmatter":{"title":"🌟 2023년 12월 회고"}}},{"node":{"id":"642af668-e5c7-501d-bbaa-7a7e0724a982","fields":{"slug":"/2024-02-07-2024년-1월회고/"},"frontmatter":{"title":"🐥 2024년 1월회고"}}},{"node":{"id":"f30aaeb4-d2ed-5b78-82cb-556facbdb597","fields":{"slug":"/2024-03-02-2024년-2월회고/"},"frontmatter":{"title":"🙊 2024년 2월회고"}}},{"node":{"id":"0a55cde5-eb6e-50ef-a0b9-3307863119d1","fields":{"slug":"/2024-03-03-자바스크립트의-동시성-이해하기/"},"frontmatter":{"title":"Promise.all의 동시성 이해하기"}}},{"node":{"id":"b8f3cba2-e71c-5b78-9eef-169fcdfde70f","fields":{"slug":"/2024-03-30-App-StartUp-time-개선/"},"frontmatter":{"title":"App StartUp time 개선"}}},{"node":{"id":"8ffb09b1-c80e-58a2-b89a-6e3c6729e89b","fields":{"slug":"/2024-04-07-2024년-3월회고/"},"frontmatter":{"title":"🙌 2024년 3월회고"}}},{"node":{"id":"67fd6178-63b4-5b39-8e3c-fb1b0c5db869","fields":{"slug":"/2024-04-21-onViewableItemsChanged-이해해보기/"},"frontmatter":{"title":"👀 onViewableItemsChanged 이해해보기"}}},{"node":{"id":"40a3836b-74fe-59bb-80a8-7d921608f55a","fields":{"slug":"/2024-05-01-2024년-4월회고/"},"frontmatter":{"title":"🙌 2024년 4월회고"}}},{"node":{"id":"6a36dcc8-a80b-5581-9649-954e0ad0c5eb","fields":{"slug":"/2024-06-01-2024년-5월회고/"},"frontmatter":{"title":"🙌 2024년 5월회고"}}},{"node":{"id":"39b77a6b-96d6-5c2e-9012-c6b6be81f72d","fields":{"slug":"/2024-06-02-에러바운더리-도입하기/"},"frontmatter":{"title":"✅ 에러바운더리 도입하기"}}},{"node":{"id":"f85b5d27-6e2c-5dd3-8ca4-1f8b70fb4815","fields":{"slug":"/2024-06-30-2024년-6월회고/"},"frontmatter":{"title":"🤭 2024년 6월회고"}}},{"node":{"id":"e4ae5f2a-10c8-58d3-bacb-6a25ce1b95fc","fields":{"slug":"/2024-06-30-NativeStack적용하기/"},"frontmatter":{"title":"🖥️ Native Stack 적용하기"}}},{"node":{"id":"36c25ccf-f28b-5447-9899-c3d0d414a44f","fields":{"slug":"/2024-08-03-2024년-7월회고/"},"frontmatter":{"title":"👏 2024년 7월회고 "}}},{"node":{"id":"e7ef6c08-c8ff-556b-8f64-b2e61225fa6f","fields":{"slug":"/2024-09-15-2024년-8월회고/"},"frontmatter":{"title":"🥳 2024년 8월회고 "}}},{"node":{"id":"7e844836-6a81-5bd8-a59f-4907b5d6fab3","fields":{"slug":"/2024-09-17-useFunnel-분석해보기/"},"frontmatter":{"title":"📚 useFunnel 분석하고 따라 만들어 보기"}}},{"node":{"id":"54a91c29-22f4-5ec0-ac9b-2902d00e195d","fields":{"slug":"/2024-09-25-로딩경험-개선/"},"frontmatter":{"title":"⏳ 로딩 경험 개선"}}},{"node":{"id":"5d3a72d4-3907-5696-ba59-56b475ad67af","fields":{"slug":"/2024-10-01-2024년-9월-회고/"},"frontmatter":{"title":"9️⃣ 2024년 9월 회고"}}},{"node":{"id":"6ce7e536-b3fc-556d-84f8-09e393e3180e","fields":{"slug":"/2024-10-25-숨고를-떠나며/"},"frontmatter":{"title":"10월 회고, 숨고를 떠나며"}}},{"node":{"id":"f3912500-0fb7-5202-9f96-94405a29c7d7","fields":{"slug":"/2024-11-18-패키지매니저/"},"frontmatter":{"title":"패키지 매니저 비교해보기"}}},{"node":{"id":"f8303667-d369-58a3-bcc5-6d612982cfeb","fields":{"slug":"/2024-11-24-overlay-kit-분석/"},"frontmatter":{"title":"Overlay Kit 분석"}}},{"node":{"id":"e431d5fb-3f76-5190-b63a-51e32f5d7244","fields":{"slug":"/2024-12-01-2024년-11월회고/"},"frontmatter":{"title":"2024년 11월 회고, welcome to 토스"}}},{"node":{"id":"7e7c7b65-d941-5e27-bf28-d0d6785641d8","fields":{"slug":"/2024-12-27-2024년-12월회고/"},"frontmatter":{"title":"2024년 12월 회고, bye bye 2024"}}},{"node":{"id":"ae2f4760-8f15-5064-8fc2-40a0eeb1067e","fields":{"slug":"/2025-01-19-useFunnel-분석/"},"frontmatter":{"title":"new useFunnel 분석해보기"}}},{"node":{"id":"59496026-3ae9-50e4-86c3-b89403ebdd42","fields":{"slug":"/2025-02-28-2025년-2월회고/"},"frontmatter":{"title":"2025년 2월 회고"}}},{"node":{"id":"a2e3fd26-8c99-574a-a04b-945acd3397ce","fields":{"slug":"/2025-01-27-2025년-1월회고/"},"frontmatter":{"title":"2025년 1월 회고"}}}]},"previous":{"fields":{"slug":"/2022-09-22-iteration/"},"frontmatter":{"title":"Iteration"}},"next":{"fields":{"slug":"/2022-09-28-포트폴리오-기획/"},"frontmatter":{"title":"포트폴리오 기획"}}},"pageContext":{"id":"cd30073c-7f4c-54d8-b893-090480da82c3","series":null,"previousPostId":"962839d3-d3ea-5820-a045-07d3cdaa0079","nextPostId":"fbbd7e8f-2a0d-5422-8296-ca0aa4933100"}},"staticQueryHashes":[],"slicesMap":{}}