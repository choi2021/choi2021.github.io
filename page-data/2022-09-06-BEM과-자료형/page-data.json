{"componentChunkName":"component---src-templates-post-jsx","path":"/2022-09-06-BEM과-자료형/","result":{"data":{"site":{"siteMetadata":{"title":"Troy DevLog"}},"markdownRemark":{"id":"4dd6f66b-f311-5b91-9eac-28095d67106f","excerpt":"5 개월 간의 학원에서 강사 생활을 끝내고 이번 주부터 좀 더 집중적으로 개발 공부를 할 수 있게 되었다. 틈틈이 쪼개서 공부하다 보니 공부해 온 것들이 산발 적으로 흩어져 있다는 생각이 들었다. 우선 가장 기본이 되는 HTML, CSS, Javascript에 대한 복습을 했다. HTML과 CSS BEM (Block-Element-Modifier) HTM…","html":"<p>5 개월 간의 학원에서 강사 생활을 끝내고 이번 주부터 좀 더 집중적으로 개발 공부를 할 수 있게 되었다.</p>\n<p>틈틈이 쪼개서 공부하다 보니 공부해 온 것들이 산발 적으로 흩어져 있다는 생각이 들었다.</p>\n<p>우선 가장 기본이 되는 HTML, CSS, Javascript에 대한 복습을 했다.</p>\n<h2>HTML과 CSS</h2>\n<h3>BEM (Block-Element-Modifier)</h3>\n<p>HTML을 사용하는 데에는 큰 무리가 없었지만 여전히 부족한 부분은 class의 이름을 naming하는 부분이었다.</p>\n<p>React를 사용하지 않고 CSS와 연결하기 위해 BEM을 다시 공부하고 정리해 보았다.</p>\n<p>BEM은 Block-Element-Modifier를 줄인 CSS 방법론으로 React와 같이 모듈화가 가능한 경우에는 사용하지 않지만 모듈화를 할 수 없을 때에</p>\n<p>class간의 충돌을 피하기 위해 사용한다.</p>\n<p><img src=\"https://scalablecss.com/static/04158e912667d940eeb914f724379072/37523/nesting-elements-within-block.png\" alt=\"Inside a card component, buttons can be a BEM element\"></p>\n<p><a href=\"https://scalablecss.com/bem-blocks-within-blocks/\">그림 출처, scalableCss</a></p>\n<p>위와 같은 그림에서 큰 component에 해당하는 card가 block, component를 이루고 있는 image, title, description,button이 element에 해당되게 된다.</p>\n<p>그림을 이용한 코드는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>“card--dog”<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>“card__image”<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>“card__title”<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>I am a card<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>“card__description”<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>I am the card paragraph<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- The button is an element inside the block --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>“card__button”<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Learn more<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>“card--cat”<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>“card__image”<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>“card__title”<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>I am a card<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>“card__description”<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>I am the card paragraph<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- The button is an element inside the block --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>“card__button”<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Learn more<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>위 코드에서 component는 \".card\"로, element들은 <code class=\"language-text\">.card__title</code> 과 같이 __로 표현된다.</p>\n<p>modifier는 강아지 사진을 담고 있는 카드의 경우 <code class=\"language-text\">.card--dog</code>으로 표현이 가능하고, 고양이 사진을 담고 경우 <code class=\"language-text\">.card--cat</code>과 같이 표현이 가능하다.</p>\n<p>이러한 BEM의 장점은 구분이 잘된다는 점이지만 단점으로는 점점 길어지고 component가 복잡해 질 수록 작성해야 하는 코드 양이 증가하게 된다.</p>\n<h2>Javascript</h2>\n<p>자바스크립트의 문법의 기초 중 변수, 자료형에 대해 공부했다.</p>\n<p>변수를 선언하는 방법은 상수를 선언하는 'const'와 변할 수 있는 'let' 두 가지가 존재한다. (var는 문제가 많아서 제외)</p>\n<p>언급한 두 가지 방법을 통해 메모리에 우리가 원하는 데이터를 임시로 저장하게 되는데 이때 다음과 같은 일이 일어난다.</p>\n<ol>\n<li>변수를 선언하면 (variable declaration) 메모리 cell의 특정 부분을 가리키게 된다.</li>\n<li>변수를 할당하면 (variable assignment) 메모리 cell에 특정 값을 저장한다.</li>\n</ol>\n<h4>Number</h4>\n<p>자바스크립트는 다른 언어들과 다르게 메모리 크기를 크게 고려하지 않고 저장할 수 있는데 Number 자료형은 실수, 음수 등 모두 담을 수 있고</p>\n<p><code class=\"language-text\">103/0</code> 이나 <code class=\"language-text\">23/-0</code> 과 같은 경우는 INFINITY로 표현한다.</p>\n<p>문자열을 숫자로 간단하게 변환할 때 <code class=\"language-text\">+</code>를 이용할 수 있다.</p>\n<h4>String</h4>\n<p>문자열을 입력할 때 <code class=\"language-text\">\"\"</code>, <code class=\"language-text\">''</code>와 함께 back tick을 이용한 template literals 세가지 방식이 존재한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> string <span class=\"token operator\">=</span> <span class=\"token string\">\"hello world!\"</span>\nstring <span class=\"token operator\">=</span> <span class=\"token string\">\"halo world!\"</span>\n\n<span class=\"token keyword\">const</span> word <span class=\"token operator\">=</span> <span class=\"token string\">\"world\"</span>\nstring <span class=\"token operator\">=</span> <span class=\"token string\">\"hello \"</span> <span class=\"token operator\">+</span> word <span class=\"token operator\">+</span> <span class=\"token string\">\"!\"</span>\nstring <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>word<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<p>Back tick (<code class=\"language-text\"></code>)은 큰따옴표 (\"\")와 작은 따옴표로 표현하기 힘든 표현들을 위한 문법으로 변수를 ${}에 넣어, 일일이 조합을 고민하지 않고 원하는 문자열을 만들 수 있는 편리함을 준다.</p>\n<h5>이스케이프 문자</h5>\n<p>이스케이프 문자는 문자열 내 특정 기호를 의미하며 백스페이스(\\)와 조합해 사용된다.</p>\n<ol>\n<li><code class=\"language-text\">\\n</code>: 띄어쓰기</li>\n<li><code class=\"language-text\">\\t</code>: 탭</li>\n<li><code class=\"language-text\">\\\\</code>: 백스페이스</li>\n<li><code class=\"language-text\">\\u</code>:유니코드</li>\n</ol>\n<h3>Boolean</h3>\n<p>불리언은 간단하게 true와 false를 가진다. 이때 중요한 부분은 falshy와 truthy 값이다.</p>\n<p>boolean으로 자료형을 변환할 때는 간단하게 <code class=\"language-text\">!!</code>을 이용할 수 있다.</p>\n<h5>Falshy</h5>\n<ol>\n<li>0,-0</li>\n<li>빈 문자열(\"\")</li>\n<li>null</li>\n<li>undefinded</li>\n<li>NaN(not a number)</li>\n</ol>\n<h5>Truthy</h5>\n<ol>\n<li>0이 아닌 숫자</li>\n<li>빈 문자열이 아닌 문자열 (\"False\"도 가능)</li>\n<li>객체 (비어있어도 true)</li>\n<li>Infinity</li>\n<li>배열 (비어있어도 true)</li>\n</ol>\n<h3>Empty 표현</h3>\n<p>자바스크립트 내 두 가지 비어있다는 표현, undefined와 null은 다음과 같은 차이점을 가지고 있다.</p>\n<h4>undefined</h4>\n<p>undefined의 경우에 말 그대로 아직 정해지지 않아 변수가 선언은 되었지만, 해당 메모리에 값이 할당되지 않은 상태를 가리킨다.</p>\n<h4>null</h4>\n<p>null의 경우에는 변수가 선언되고 메모리에 비어있는 object가 할당되어 있는 상태를 가리킨다.</p>\n<ul>\n<li>여기서 특이한 점은 null의 type이 object라는 점이다. primitive 자료형이지만 type으로는 null을 가리키고 있는데 이러한 아이러니는 초기 자바스크립트를 개발하면서 생긴 오류라고 한다.</li>\n</ul>\n<p>[참조]\n<a href=\"https://blog.naver.com/gofkdvjvl/222166705113\">null===object에 대한 고찰</a></p>","frontmatter":{"title":"BEM과 자바스크립트의 자료형","date":"September 06, 2022","tags":["css","javascript","문법"],"series":null},"fields":{"slug":"/2022-09-06-BEM과-자료형/","readingTime":{"minutes":6.22}}},"seriesList":{"edges":[{"node":{"id":"4dd6f66b-f311-5b91-9eac-28095d67106f","fields":{"slug":"/2022-09-06-BEM과-자료형/"},"frontmatter":{"title":"BEM과 자바스크립트의 자료형"}}},{"node":{"id":"484c98ee-5762-55db-84b4-6b21ae960acf","fields":{"slug":"/2022-09-07-자바스트립트의-두가지-복사방법/"},"frontmatter":{"title":"자바스크립트의 두가지 복사 방법"}}},{"node":{"id":"352ba125-5786-518a-9c7a-303042a0755f","fields":{"slug":"/2022-09-07-자바스크립트의-타입과연산자/"},"frontmatter":{"title":"자바스크립트의 타입과 연산자"}}},{"node":{"id":"10db5919-95c0-53f5-94be-dcbac01e5d37","fields":{"slug":"/2022-09-10-intersection-observer /"},"frontmatter":{"title":"Intersection observer"}}},{"node":{"id":"5b188256-9365-5320-a67f-97afab6d630f","fields":{"slug":"/2022-09-12-브라우저API/"},"frontmatter":{"title":"Browser API"}}},{"node":{"id":"db56d225-cd7a-5168-8079-35d6d038e94f","fields":{"slug":"/2022-09-13-함수/"},"frontmatter":{"title":"함수"}}},{"node":{"id":"80cd5d8e-ad25-5b3f-921a-53a5f16a9bd5","fields":{"slug":"/2022-09-14-객체/"},"frontmatter":{"title":"객체"}}},{"node":{"id":"44dc8bd6-7888-58d2-b3fb-124760fd2e55","fields":{"slug":"/2022-09-17-빌트인객체/"},"frontmatter":{"title":"빌트인 객체"}}},{"node":{"id":"75d48151-20bb-5d55-9b13-7c77c923e577","fields":{"slug":"/2022-09-19-array/"},"frontmatter":{"title":"Array"}}},{"node":{"id":"962839d3-d3ea-5820-a045-07d3cdaa0079","fields":{"slug":"/2022-09-22-iteration/"},"frontmatter":{"title":"Iteration"}}},{"node":{"id":"cd30073c-7f4c-54d8-b893-090480da82c3","fields":{"slug":"/2022-09-24-Map과Set/"},"frontmatter":{"title":"Map과 Set"}}},{"node":{"id":"900f53ea-b7eb-5996-b44b-626400cf9d87","fields":{"slug":"/2022-10-06-HTTP란/"},"frontmatter":{"title":"HTTP 정리"}}},{"node":{"id":"458970f3-d49a-5b5f-8975-6f084e4ab43b","fields":{"slug":"/2022-10-18-Node-JS-기초/"},"frontmatter":{"title":"Node js:NodeJS 이용한 서버 만들기"}}},{"node":{"id":"f0792841-794b-5ec0-a351-a2f7605adc40","fields":{"slug":"/2022-10-19-Express-기초/"},"frontmatter":{"title":"NodeJS: express"}}},{"node":{"id":"d2bb44f2-60ad-5ed7-90ab-2bf43c831572","fields":{"slug":"/2022-11-18-CSR과-SSR/"},"frontmatter":{"title":"CSR과 SSR 그리고 Universal Rendering"}}},{"node":{"id":"cb62a84f-d1d5-5894-8175-64624d84a372","fields":{"slug":"/2022-11-20-스코프-실행컨테스트-클로저/"},"frontmatter":{"title":"스코프,실행컨텍스트,클로저"}}},{"node":{"id":"3b08f6c0-b947-5562-b38c-1228108dd551","fields":{"slug":"/2022-11-24-Critical-Rendering-Path/"},"frontmatter":{"title":"💻 Critical Rendering Path"}}},{"node":{"id":"9735256f-9deb-5bc5-a7a3-9d68d3278b4a","fields":{"slug":"/2022-11-27-비동기와-프로미스/"},"frontmatter":{"title":"비동기와 프로미스"}}},{"node":{"id":"ce607981-e768-5fdf-96d7-5d026072082f","fields":{"slug":"/2022-11-30-지스트-청원-서비스-회고/"},"frontmatter":{"title":"지스트 청원서비스 회고"}}},{"node":{"id":"f6194d07-b810-5332-9cbc-da0ce80eb312","fields":{"slug":"/2022-12-02-제너레이터와-async-await/"},"frontmatter":{"title":"제너레이터와 Async-Await"}}},{"node":{"id":"ad48afd5-0612-56fe-a974-7edb7de83a74","fields":{"slug":"/2022-12-03-모으잡-리팩토링/"},"frontmatter":{"title":"모으잡-check box 수정, react-query 커스텀 훅, 크롤링 이슈"}}},{"node":{"id":"2776079b-37ef-5268-9738-de277120a7da","fields":{"slug":"/2022-12-05-호이스팅/"},"frontmatter":{"title":"호이스팅"}}},{"node":{"id":"01501fd0-6b11-5e0d-80ae-5f607d766625","fields":{"slug":"/2022-12-09-쿠키-session-jwt/"},"frontmatter":{"title":"Cookie,Session과 JWT"}}},{"node":{"id":"72347779-5753-5035-b978-e4569b4f14cf","fields":{"slug":"/2022-12-09-this/"},"frontmatter":{"title":"this"}}},{"node":{"id":"a64e2757-3cf3-5eb6-a560-d93cbc6b68b2","fields":{"slug":"/2022-12-10-http와https/"},"frontmatter":{"title":"http와 https"}}},{"node":{"id":"89b94977-8c1a-5723-af2b-1bf7c7750ebe","fields":{"slug":"/2022-12-12-생성자함수-프로토타입/"},"frontmatter":{"title":"생성자 함수, 프로토타입"}}},{"node":{"id":"5d40ad58-a897-564b-9a54-5c4a65ca9c0c","fields":{"slug":"/2022-12-30-이벤트/"},"frontmatter":{"title":"이벤트"}}},{"node":{"id":"93b78365-058d-511b-bb11-72485e3f0d70","fields":{"slug":"/2022-12-23-class/"},"frontmatter":{"title":"클래스"}}},{"node":{"id":"94db5333-429d-592a-a409-e8f0a0c76354","fields":{"slug":"/2023-01-23-리액트의-기본원리/"},"frontmatter":{"title":"React study: 리액트의 기본 원리"}}},{"node":{"id":"fe5c6476-9c85-50cc-938a-137246b45864","fields":{"slug":"/2023-01-23-Vite와-번들러/"},"frontmatter":{"title":"Vite는 왜 빠를까, 번들러에 대한 정리"}}},{"node":{"id":"80445e0b-511b-5e28-bde0-99498fbf3a5d","fields":{"slug":"/2022-12-20-리액트-성능보장/"},"frontmatter":{"title":"React study: 리액트가 성능을 보장하는 방법"}}},{"node":{"id":"782ca102-9c01-52ee-8b4d-b5432da4b448","fields":{"slug":"/2023-02-03-useState,useEffect, useRef, memo/"},"frontmatter":{"title":"React Study: useState, useEffect, useRef, memo"}}},{"node":{"id":"c1d41785-332b-595b-b9b8-0c7a719657c7","fields":{"slug":"/2023-02-17-취업준비-회고/"},"frontmatter":{"title":"신입으로 시작하며 작성하는 취준 회고"}}},{"node":{"id":"e06ed826-880e-5b59-ae78-c098858b0634","fields":{"slug":"/2023-02-21-google.com-입력했을때-일어나는-일/"},"frontmatter":{"title":"google.com를 브라우저에 검색했을 때 일어나는 일"}}},{"node":{"id":"aad7179c-dbc9-5851-a7fd-38251e0a508b","fields":{"slug":"/2023-03-01-CDN/"},"frontmatter":{"title":"CDN은 뭘까?"}}},{"node":{"id":"beed37b9-064d-581e-89d3-b4c43838e429","fields":{"slug":"/2023-03-05-디자인패턴/"},"frontmatter":{"title":"MVC, MVVM, Flux패턴 그리고 Service와 Repository 패턴"}}},{"node":{"id":"6f3b633d-c73e-5585-b597-edaa1d26c2bb","fields":{"slug":"/2023-03-31-2023년-3월회고/"},"frontmatter":{"title":"🐤 2023년 3월 회고"}}},{"node":{"id":"aed1969e-b959-5454-8c2f-52c4a0ec6e94","fields":{"slug":"/2023-05-06-2023년-4월회고/"},"frontmatter":{"title":"😎 2023년 4월 회고"}}},{"node":{"id":"a73d6084-a910-5da1-bcb0-f555558f6e3b","fields":{"slug":"/2023-06-05-2023년-5월회고/"},"frontmatter":{"title":"☀︎ 2023년 5월 회고"}}},{"node":{"id":"90c8982f-2982-5a80-bd85-6283a0f82d70","fields":{"slug":"/2023-07-06-2023년-6월회고/"},"frontmatter":{"title":"☼ 2023년 6월 회고"}}},{"node":{"id":"88fffefc-5bb1-5a85-b1aa-b0ac1d4bed94","fields":{"slug":"/2023-08-09-2023년-7월회고/"},"frontmatter":{"title":"☂︎ 2023년 7월 회고"}}},{"node":{"id":"e274816c-0eb9-5b42-93d0-823495b63d87","fields":{"slug":"/2023-09-09-2023년-8월회고/"},"frontmatter":{"title":"😊 2023년 8월 회고"}}},{"node":{"id":"0370cc06-a8be-5505-9714-383d053b476d","fields":{"slug":"/2023-10-03-2023년-9월회고/"},"frontmatter":{"title":"🚅 2023년 9월 회고"}}},{"node":{"id":"4eea6c19-13d8-5363-bc87-963f217b7a42","fields":{"slug":"/2023-11-01-2023년-10월회고/"},"frontmatter":{"title":"🧐 2023년 10월 회고"}}},{"node":{"id":"a2a6e999-a53d-5e52-aae6-d57a75673c5f","fields":{"slug":"/2023-12-02-2023년-11월회고/"},"frontmatter":{"title":"😃 2023년 11월 회고"}}},{"node":{"id":"ee90f174-21d6-5bbf-b2cf-6fd226bc9353","fields":{"slug":"/2023-12-31-2023년-12월회고/"},"frontmatter":{"title":"🌟 2023년 12월 회고"}}},{"node":{"id":"642af668-e5c7-501d-bbaa-7a7e0724a982","fields":{"slug":"/2024-02-07-2024년-1월회고/"},"frontmatter":{"title":"🐥 2024년 1월회고"}}},{"node":{"id":"f30aaeb4-d2ed-5b78-82cb-556facbdb597","fields":{"slug":"/2024-03-02-2024년-2월회고/"},"frontmatter":{"title":"🙊 2024년 2월회고"}}},{"node":{"id":"0a55cde5-eb6e-50ef-a0b9-3307863119d1","fields":{"slug":"/2024-03-03-자바스크립트의-동시성-이해하기/"},"frontmatter":{"title":"Promise.all의 동시성 이해하기"}}},{"node":{"id":"b8f3cba2-e71c-5b78-9eef-169fcdfde70f","fields":{"slug":"/2024-03-30-App-StartUp-time-개선/"},"frontmatter":{"title":"App StartUp time 개선"}}},{"node":{"id":"8ffb09b1-c80e-58a2-b89a-6e3c6729e89b","fields":{"slug":"/2024-04-07-2024년-3월회고/"},"frontmatter":{"title":"🙌 2024년 3월회고"}}},{"node":{"id":"67fd6178-63b4-5b39-8e3c-fb1b0c5db869","fields":{"slug":"/2024-04-21-onViewableItemsChanged-이해해보기/"},"frontmatter":{"title":"👀 onViewableItemsChanged 이해해보기"}}},{"node":{"id":"40a3836b-74fe-59bb-80a8-7d921608f55a","fields":{"slug":"/2024-05-01-2024년-4월회고/"},"frontmatter":{"title":"🙌 2024년 4월회고"}}},{"node":{"id":"6a36dcc8-a80b-5581-9649-954e0ad0c5eb","fields":{"slug":"/2024-06-01-2024년-5월회고/"},"frontmatter":{"title":"🙌 2024년 5월회고"}}},{"node":{"id":"39b77a6b-96d6-5c2e-9012-c6b6be81f72d","fields":{"slug":"/2024-06-02-에러바운더리-도입하기/"},"frontmatter":{"title":"✅ 에러바운더리 도입하기"}}},{"node":{"id":"f85b5d27-6e2c-5dd3-8ca4-1f8b70fb4815","fields":{"slug":"/2024-06-30-2024년-6월회고/"},"frontmatter":{"title":"🤭 2024년 6월회고"}}},{"node":{"id":"e4ae5f2a-10c8-58d3-bacb-6a25ce1b95fc","fields":{"slug":"/2024-06-30-NativeStack적용하기/"},"frontmatter":{"title":"🖥️ Native Stack 적용하기"}}},{"node":{"id":"36c25ccf-f28b-5447-9899-c3d0d414a44f","fields":{"slug":"/2024-08-03-2024년-7월회고/"},"frontmatter":{"title":"👏 2024년 7월회고 "}}},{"node":{"id":"e7ef6c08-c8ff-556b-8f64-b2e61225fa6f","fields":{"slug":"/2024-09-15-2024년-8월회고/"},"frontmatter":{"title":"🥳 2024년 8월회고 "}}},{"node":{"id":"7e844836-6a81-5bd8-a59f-4907b5d6fab3","fields":{"slug":"/2024-09-17-useFunnel-분석해보기/"},"frontmatter":{"title":"📚 useFunnel 분석하고 따라 만들어 보기"}}},{"node":{"id":"54a91c29-22f4-5ec0-ac9b-2902d00e195d","fields":{"slug":"/2024-09-25-로딩경험-개선/"},"frontmatter":{"title":"⏳ 로딩 경험 개선"}}},{"node":{"id":"5d3a72d4-3907-5696-ba59-56b475ad67af","fields":{"slug":"/2024-10-01-2024년-9월-회고/"},"frontmatter":{"title":"9️⃣ 2024년 9월 회고"}}},{"node":{"id":"6ce7e536-b3fc-556d-84f8-09e393e3180e","fields":{"slug":"/2024-10-25-숨고를-떠나며/"},"frontmatter":{"title":"10월 회고, 숨고를 떠나며"}}},{"node":{"id":"f3912500-0fb7-5202-9f96-94405a29c7d7","fields":{"slug":"/2024-11-18-패키지매니저/"},"frontmatter":{"title":"패키지 매니저 비교해보기"}}},{"node":{"id":"f8303667-d369-58a3-bcc5-6d612982cfeb","fields":{"slug":"/2024-11-24-overlay-kit-분석/"},"frontmatter":{"title":"Overlay Kit 분석"}}},{"node":{"id":"e431d5fb-3f76-5190-b63a-51e32f5d7244","fields":{"slug":"/2024-12-01-2024년-11월회고/"},"frontmatter":{"title":"2024년 11월 회고, welcome to 토스"}}}]},"previous":null,"next":{"fields":{"slug":"/2022-09-07-자바스트립트의-두가지-복사방법/"},"frontmatter":{"title":"자바스크립트의 두가지 복사 방법"}}},"pageContext":{"id":"4dd6f66b-f311-5b91-9eac-28095d67106f","series":null,"previousPostId":null,"nextPostId":"484c98ee-5762-55db-84b4-6b21ae960acf"}},"staticQueryHashes":[],"slicesMap":{}}