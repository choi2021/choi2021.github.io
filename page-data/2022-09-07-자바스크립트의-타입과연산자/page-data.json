{"componentChunkName":"component---src-templates-post-jsx","path":"/2022-09-07-자바스크립트의-타입과연산자/","result":{"data":{"site":{"siteMetadata":{"title":"Troy DevLog"}},"markdownRemark":{"id":"352ba125-5786-518a-9c7a-303042a0755f","excerpt":"1. 자바스크립트의 타입 자바스크립트는 dynamic 프로그래밍 language로 동적으로 타입이 결정되는 언어이다. 자바스크립트는 컴파일러가 아니라 interpreter언어이기 때문이다. 위 두가지의 차이를 정리를 해보고자 한다. 컴파일러와 인터프리터 우리가 쓰는 언어 (high-level)를 컴퓨터가 이해할 수 있게 변환해주는 방식에 따라 컴파일러와 …","html":"<h3>1. 자바스크립트의 타입</h3>\n<p>자바스크립트는 dynamic 프로그래밍 language로 동적으로 타입이 결정되는 언어이다. 자바스크립트는 컴파일러가 아니라 interpreter언어이기 때문이다. 위 두가지의 차이를 정리를 해보고자 한다.</p>\n<h5>컴파일러와 인터프리터</h5>\n<p>우리가 쓰는 언어 (high-level)를 컴퓨터가 이해할 수 있게 변환해주는 방식에 따라 컴파일러와 인터프리터로 나뉘게 된다.</p>\n<p><img src=\"..%2F2022-09-07-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%8A%B8%EB%A6%BD%ED%8A%B8%EC%9D%98-%EB%91%90%EA%B0%80%EC%A7%80-%EB%B3%B5%EC%82%AC%EB%B0%A9%EB%B2%95%2F%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC-%EC%9D%B8%ED%84%B0%ED%94%84%EB%A6%AC%ED%84%B0.png\" alt=\"컴파일러-인터프리터.png\"></p>\n<p>출처: <a href=\"https://www.guru99.com/difference-compiler-vs-interpreter.html\">difference-compiler-vs-interpreter</a></p>\n<h5>1) 컴파일러</h5>\n<p>컴파일러는 우리가 작성한 언어를 실행전에 모든 코드를 검사하고 machine code로 바꾸어주는 작업을 먼저한다. 이렇게 만들어진 machine code로 인해 타입이 정적으로 정해진다.</p>\n<p>그렇기 때문에 machine code로 바꾸는 데 시간이 걸리지만 만들고 나서는 실행이 빠른 장점을 갖는다. 컴파일러 언어에는 C, Java와 같은 언어가 있다.</p>\n<h5>2) 인터프리터</h5>\n<p>인터프리터는 우리가 작성한 언어를 한줄한줄 런타임에서 읽어 해석한다. 그렇기에 machine code로 바꾸는 작업이 없지만 실행과 함께 한줄 한줄 읽어 나가기 때문에 실행속도는 느린 단점이 있으며, 타입이 동적으로 정해진다.\n인터프리터 언어에는 Python, javascript와 같은 언어가 있다.</p>\n<p>내가 공부하고 있는 javascript는 인터프리터로 내가 쓴 코드를 javscript engine은 한 줄, 한 줄 읽으면서 해석하기 때문에\n타입이 동적으로 결정되어 내가 처음에 number로 정한 변수가 나중에는 string으로 바뀌어도 에러를 던지지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> number <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nnumber <span class=\"token operator\">=</span> <span class=\"token string\">\"3\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span> <span class=\"token comment\">//\"3\"</span></code></pre></div>\n<p>이렇게 유동적인 점은 빠르게 개발할 때는 좋지만, 복잡해질 수록 개발자에게는 오류를 만들 수 있는 부분이 되기 때문에 Typescript언어가 나오게 되었다.</p>\n<h3>연산자와 형변환</h3>\n<h5>1. 산술 연산자</h5>\n<p>+, -, *, /, %, ** 와 같이 계산을 위한 기호를 의미한다.</p>\n<p>여기서 주의할 점은 +인데 자바스크립트는 다른 type간의 +가 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"1\"</span> <span class=\"token comment\">//\"11\"</span></code></pre></div>\n<p>위와 같이 숫자와 string 타입간의 더하기를 통해 결과가 string으로 나오는 것을 볼 수 있다.</p>\n<h5>2. 단항 연산자</h5>\n<p>단항연산자는 양수,음수를 표현하기 위한 +,-와 부정을 의미하는 !가 있다.</p>\n<p>여기서 유용한 점은 +와 !!를 이용해 형변환이 가능하다는 점이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">;</span><span class=\"token operator\">+</span><span class=\"token boolean\">false</span> <span class=\"token operator\">+</span> <span class=\"token comment\">//0</span>\n  <span class=\"token keyword\">null</span> <span class=\"token operator\">+</span> <span class=\"token comment\">//0</span>\n  <span class=\"token boolean\">true</span> <span class=\"token operator\">+</span> <span class=\"token comment\">//1</span>\n  <span class=\"token string\">\"text\"</span> <span class=\"token operator\">+</span> <span class=\"token comment\">//NaN</span>\n  <span class=\"token keyword\">undefined</span> <span class=\"token operator\">/</span> <span class=\"token number\">NaN</span> <span class=\"token operator\">+</span>\n  <span class=\"token string\">\"3\"</span> <span class=\"token comment\">//3</span>\n\n<span class=\"token operator\">!</span><span class=\"token number\">3</span> <span class=\"token comment\">//false</span>\n<span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token number\">3</span> <span class=\"token comment\">//true</span>\n<span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token string\">\"\"</span> <span class=\"token comment\">//false</span></code></pre></div>\n<p>위와 같은 방법으로 형변환을 할 때, Truthy와 falsy값을 생각하면 좀 더 이해하기 쉬웠다.</p>\n<p>Truthy한 값을 숫자로 형변환할 때는 1로, falsy한 값을 숫자로 변환하면 0으로 변환되었다.</p>\n<h5>3. 할당 연산자</h5>\n<p>할당연산자는 간단하게 연산식을 표현하기 위한 연산자다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\na <span class=\"token operator\">+=</span> <span class=\"token number\">2</span> <span class=\"token comment\">//a=a+2;</span>\na <span class=\"token operator\">-=</span> <span class=\"token number\">2</span> <span class=\"token comment\">//a=a-2;</span>\na <span class=\"token operator\">*=</span> <span class=\"token number\">2</span> <span class=\"token comment\">//a=a*2;</span>\na <span class=\"token operator\">/=</span> <span class=\"token number\">2</span> <span class=\"token comment\">//a=a/2;</span>\na <span class=\"token operator\">%=</span> <span class=\"token number\">2</span> <span class=\"token comment\">//a=a%2;</span>\na <span class=\"token operator\">**=</span> <span class=\"token number\">2</span> <span class=\"token comment\">//a=a**2;</span></code></pre></div>\n<h5>4. 증감 연산자</h5>\n<p>증감 연산자는 간단하게 변수를 1 증가,1 감소를 표현하는 연산자다. 간편하지만 앞에 붙이냐 뒤에 붙이냐에 따라 달라질 수 있으니 주의하자</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> a<span class=\"token operator\">++</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span> <span class=\"token comment\">//100,101</span>\n\na <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>a\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span> <span class=\"token comment\">//101,101</span></code></pre></div>\n<p>++a 경우에 1을 증가시키는 걸 먼저한 후에 필요한 계산을 하라는 의미가 되며, a++ 경우에는 필요한 계산을 먼저한 후에 1을 증가시키라는 의미가 된다. 어떤 걸 사용해도 동일할 때도 있지만 상황에 따라 달라질 수 있으니 주의할 필요가 있다.</p>\n<h5>5. 비교 연산자</h5>\n<p>비교 연산자는 <code class=\"language-text\">>,&lt;,>=,&lt;=</code> 4가지로 간단하다. <code class=\"language-text\">=&lt;</code>와 같이 쓸 때가 있는데 인식하지 못하니 주의하자</p>\n<h5>6. 연산자 우선순위</h5>\n<p>우선순위는 항상 괄호가 높으므로 필요한 연산에는 괄호를 꼭 사용하자. 기본적으로는 *, / 가 + , - 보다 우선순위가 높다.</p>\n<h5>7. 동등 비교 연산자</h5>\n<p>동등 비교연산자는 (==, !=) 와 (===,!==) 로 값이 같은 지를 비교할 수 있다. 이때 두가지의 차이점은 ==와 !=는 값만 비교하는 반면 ===와 !==는 값과 타입을 같이 비교한다. 실제 개발할 때는 타입까지 고려한 ===과 !==를 이용하는 게 좋다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token keyword\">const</span> num2 <span class=\"token operator\">=</span> <span class=\"token string\">\"2\"</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">==</span> num2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//true</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">===</span> num2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span></code></pre></div>\n<ul>\n<li>key와 value가 같은 오브젝트 비교</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">firstname</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Youngjun\"</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">firstname</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Youngjun\"</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> obj3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> obj4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1 <span class=\"token operator\">==</span> obj2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj3 <span class=\"token operator\">==</span> obj4<span class=\"token punctuation\">)</span> <span class=\"token comment\">//false</span></code></pre></div>\n<p>위에 키와 값이 같은 오브젝트 2가지를 비교했지만 결과는 false이다. 그이유는 어제 공부했던 오브젝트를 저장하는 변수에는 오브젝트 자체가 아닌 오브젝트를 보관하고 있는 곳의 메모리 주소가 저장되기 때문이다. 그렇기에 새롭게 만들어지는 오브젝트는 항상 서로 다르다고 할 수 있다.</p>","frontmatter":{"title":"자바스크립트의 타입과 연산자","date":"September 07, 2022","tags":["javascript"],"series":null},"fields":{"slug":"/2022-09-07-자바스크립트의-타입과연산자/","readingTime":{"minutes":6.935}}},"seriesList":{"edges":[{"node":{"id":"4dd6f66b-f311-5b91-9eac-28095d67106f","fields":{"slug":"/2022-09-06-BEM과-자료형/"},"frontmatter":{"title":"BEM과 자바스크립트의 자료형"}}},{"node":{"id":"484c98ee-5762-55db-84b4-6b21ae960acf","fields":{"slug":"/2022-09-07-자바스트립트의-두가지-복사방법/"},"frontmatter":{"title":"자바스크립트의 두가지 복사 방법"}}},{"node":{"id":"352ba125-5786-518a-9c7a-303042a0755f","fields":{"slug":"/2022-09-07-자바스크립트의-타입과연산자/"},"frontmatter":{"title":"자바스크립트의 타입과 연산자"}}},{"node":{"id":"10db5919-95c0-53f5-94be-dcbac01e5d37","fields":{"slug":"/2022-09-10-intersection-observer /"},"frontmatter":{"title":"Intersection observer"}}},{"node":{"id":"5b188256-9365-5320-a67f-97afab6d630f","fields":{"slug":"/2022-09-12-브라우저API/"},"frontmatter":{"title":"Browser API"}}},{"node":{"id":"db56d225-cd7a-5168-8079-35d6d038e94f","fields":{"slug":"/2022-09-13-함수/"},"frontmatter":{"title":"함수"}}},{"node":{"id":"80cd5d8e-ad25-5b3f-921a-53a5f16a9bd5","fields":{"slug":"/2022-09-14-객체/"},"frontmatter":{"title":"객체"}}},{"node":{"id":"44dc8bd6-7888-58d2-b3fb-124760fd2e55","fields":{"slug":"/2022-09-17-빌트인객체/"},"frontmatter":{"title":"빌트인 객체"}}},{"node":{"id":"75d48151-20bb-5d55-9b13-7c77c923e577","fields":{"slug":"/2022-09-19-array/"},"frontmatter":{"title":"Array"}}},{"node":{"id":"962839d3-d3ea-5820-a045-07d3cdaa0079","fields":{"slug":"/2022-09-22-iteration/"},"frontmatter":{"title":"Iteration"}}},{"node":{"id":"cd30073c-7f4c-54d8-b893-090480da82c3","fields":{"slug":"/2022-09-24-Map과Set/"},"frontmatter":{"title":"Map과 Set"}}},{"node":{"id":"900f53ea-b7eb-5996-b44b-626400cf9d87","fields":{"slug":"/2022-10-06-HTTP란/"},"frontmatter":{"title":"HTTP 정리"}}},{"node":{"id":"458970f3-d49a-5b5f-8975-6f084e4ab43b","fields":{"slug":"/2022-10-18-Node-JS-기초/"},"frontmatter":{"title":"Node js:NodeJS 이용한 서버 만들기"}}},{"node":{"id":"f0792841-794b-5ec0-a351-a2f7605adc40","fields":{"slug":"/2022-10-19-Express-기초/"},"frontmatter":{"title":"NodeJS: express"}}},{"node":{"id":"d2bb44f2-60ad-5ed7-90ab-2bf43c831572","fields":{"slug":"/2022-11-18-CSR과-SSR/"},"frontmatter":{"title":"CSR과 SSR 그리고 Universal Rendering"}}},{"node":{"id":"cb62a84f-d1d5-5894-8175-64624d84a372","fields":{"slug":"/2022-11-20-스코프-실행컨테스트-클로저/"},"frontmatter":{"title":"스코프,실행컨텍스트,클로저"}}},{"node":{"id":"3b08f6c0-b947-5562-b38c-1228108dd551","fields":{"slug":"/2022-11-24-Critical-Rendering-Path/"},"frontmatter":{"title":"💻 Critical Rendering Path"}}},{"node":{"id":"9735256f-9deb-5bc5-a7a3-9d68d3278b4a","fields":{"slug":"/2022-11-27-비동기와-프로미스/"},"frontmatter":{"title":"비동기와 프로미스"}}},{"node":{"id":"ce607981-e768-5fdf-96d7-5d026072082f","fields":{"slug":"/2022-11-30-지스트-청원-서비스-회고/"},"frontmatter":{"title":"지스트 청원서비스 회고"}}},{"node":{"id":"f6194d07-b810-5332-9cbc-da0ce80eb312","fields":{"slug":"/2022-12-02-제너레이터와-async-await/"},"frontmatter":{"title":"제너레이터와 Async-Await"}}},{"node":{"id":"ad48afd5-0612-56fe-a974-7edb7de83a74","fields":{"slug":"/2022-12-03-모으잡-리팩토링/"},"frontmatter":{"title":"모으잡-check box 수정, react-query 커스텀 훅, 크롤링 이슈"}}},{"node":{"id":"2776079b-37ef-5268-9738-de277120a7da","fields":{"slug":"/2022-12-05-호이스팅/"},"frontmatter":{"title":"호이스팅"}}},{"node":{"id":"01501fd0-6b11-5e0d-80ae-5f607d766625","fields":{"slug":"/2022-12-09-쿠키-session-jwt/"},"frontmatter":{"title":"Cookie,Session과 JWT"}}},{"node":{"id":"72347779-5753-5035-b978-e4569b4f14cf","fields":{"slug":"/2022-12-09-this/"},"frontmatter":{"title":"this"}}},{"node":{"id":"a64e2757-3cf3-5eb6-a560-d93cbc6b68b2","fields":{"slug":"/2022-12-10-http와https/"},"frontmatter":{"title":"http와 https"}}},{"node":{"id":"89b94977-8c1a-5723-af2b-1bf7c7750ebe","fields":{"slug":"/2022-12-12-생성자함수-프로토타입/"},"frontmatter":{"title":"생성자 함수, 프로토타입"}}},{"node":{"id":"5d40ad58-a897-564b-9a54-5c4a65ca9c0c","fields":{"slug":"/2022-12-30-이벤트/"},"frontmatter":{"title":"이벤트"}}},{"node":{"id":"93b78365-058d-511b-bb11-72485e3f0d70","fields":{"slug":"/2022-12-23-class/"},"frontmatter":{"title":"클래스"}}},{"node":{"id":"fe5c6476-9c85-50cc-938a-137246b45864","fields":{"slug":"/2023-01-23-Vite와-번들러/"},"frontmatter":{"title":"Vite는 왜 빠를까, 번들러에 대한 정리"}}},{"node":{"id":"94db5333-429d-592a-a409-e8f0a0c76354","fields":{"slug":"/2023-01-23-리액트의-기본원리/"},"frontmatter":{"title":"React study: 리액트의 기본 원리"}}},{"node":{"id":"80445e0b-511b-5e28-bde0-99498fbf3a5d","fields":{"slug":"/2022-12-20-리액트-성능보장/"},"frontmatter":{"title":"React study: 리액트가 성능을 보장하는 방법"}}},{"node":{"id":"782ca102-9c01-52ee-8b4d-b5432da4b448","fields":{"slug":"/2023-02-03-useState,useEffect, useRef, memo/"},"frontmatter":{"title":"React Study: useState, useEffect, useRef, memo"}}},{"node":{"id":"c1d41785-332b-595b-b9b8-0c7a719657c7","fields":{"slug":"/2023-02-17-취업준비-회고/"},"frontmatter":{"title":"신입으로 시작하며 작성하는 취준 회고"}}},{"node":{"id":"e06ed826-880e-5b59-ae78-c098858b0634","fields":{"slug":"/2023-02-21-google.com-입력했을때-일어나는-일/"},"frontmatter":{"title":"google.com를 브라우저에 검색했을 때 일어나는 일"}}},{"node":{"id":"aad7179c-dbc9-5851-a7fd-38251e0a508b","fields":{"slug":"/2023-03-01-CDN/"},"frontmatter":{"title":"CDN은 뭘까?"}}},{"node":{"id":"beed37b9-064d-581e-89d3-b4c43838e429","fields":{"slug":"/2023-03-05-디자인패턴/"},"frontmatter":{"title":"MVC, MVVM, Flux패턴 그리고 Service와 Repository 패턴"}}},{"node":{"id":"6f3b633d-c73e-5585-b597-edaa1d26c2bb","fields":{"slug":"/2023-03-31-2023년-3월회고/"},"frontmatter":{"title":"🐤 2023년 3월 회고"}}},{"node":{"id":"aed1969e-b959-5454-8c2f-52c4a0ec6e94","fields":{"slug":"/2023-05-06-2023년-4월회고/"},"frontmatter":{"title":"😎 2023년 4월 회고"}}},{"node":{"id":"a73d6084-a910-5da1-bcb0-f555558f6e3b","fields":{"slug":"/2023-06-05-2023년-5월회고/"},"frontmatter":{"title":"☀︎ 2023년 5월 회고"}}},{"node":{"id":"90c8982f-2982-5a80-bd85-6283a0f82d70","fields":{"slug":"/2023-07-06-2023년-6월회고/"},"frontmatter":{"title":"☼ 2023년 6월 회고"}}},{"node":{"id":"88fffefc-5bb1-5a85-b1aa-b0ac1d4bed94","fields":{"slug":"/2023-08-09-2023년-7월회고/"},"frontmatter":{"title":"☂︎ 2023년 7월 회고"}}},{"node":{"id":"e274816c-0eb9-5b42-93d0-823495b63d87","fields":{"slug":"/2023-09-09-2023년-8월회고/"},"frontmatter":{"title":"😊 2023년 8월 회고"}}},{"node":{"id":"0370cc06-a8be-5505-9714-383d053b476d","fields":{"slug":"/2023-10-03-2023년-9월회고/"},"frontmatter":{"title":"🚅 2023년 9월 회고"}}},{"node":{"id":"4eea6c19-13d8-5363-bc87-963f217b7a42","fields":{"slug":"/2023-11-01-2023년-10월회고/"},"frontmatter":{"title":"🧐 2023년 10월 회고"}}},{"node":{"id":"a2a6e999-a53d-5e52-aae6-d57a75673c5f","fields":{"slug":"/2023-12-02-2023년-11월회고/"},"frontmatter":{"title":"😃 2023년 11월 회고"}}},{"node":{"id":"ee90f174-21d6-5bbf-b2cf-6fd226bc9353","fields":{"slug":"/2023-12-31-2023년-12월회고/"},"frontmatter":{"title":"🌟 2023년 12월 회고"}}},{"node":{"id":"642af668-e5c7-501d-bbaa-7a7e0724a982","fields":{"slug":"/2024-02-07-2024년-1월회고/"},"frontmatter":{"title":"🐥 2024년 1월회고"}}},{"node":{"id":"f30aaeb4-d2ed-5b78-82cb-556facbdb597","fields":{"slug":"/2024-03-02-2024년-2월회고/"},"frontmatter":{"title":"🙊 2024년 2월회고"}}},{"node":{"id":"0a55cde5-eb6e-50ef-a0b9-3307863119d1","fields":{"slug":"/2024-03-03-자바스크립트의-동시성-이해하기/"},"frontmatter":{"title":"Promise.all의 동시성 이해하기"}}},{"node":{"id":"b8f3cba2-e71c-5b78-9eef-169fcdfde70f","fields":{"slug":"/2024-03-30-App-StartUp-time-개선/"},"frontmatter":{"title":"App StartUp time 개선"}}},{"node":{"id":"8ffb09b1-c80e-58a2-b89a-6e3c6729e89b","fields":{"slug":"/2024-04-07-2024년-3월회고/"},"frontmatter":{"title":"🙌 2024년 3월회고"}}},{"node":{"id":"67fd6178-63b4-5b39-8e3c-fb1b0c5db869","fields":{"slug":"/2024-04-21-onViewableItemsChanged-이해해보기/"},"frontmatter":{"title":"👀 onViewableItemsChanged 이해해보기"}}},{"node":{"id":"40a3836b-74fe-59bb-80a8-7d921608f55a","fields":{"slug":"/2024-05-01-2024년-4월회고/"},"frontmatter":{"title":"🙌 2024년 4월회고"}}},{"node":{"id":"6a36dcc8-a80b-5581-9649-954e0ad0c5eb","fields":{"slug":"/2024-06-01-2024년-5월회고/"},"frontmatter":{"title":"🙌 2024년 5월회고"}}},{"node":{"id":"39b77a6b-96d6-5c2e-9012-c6b6be81f72d","fields":{"slug":"/2024-06-02-에러바운더리-도입하기/"},"frontmatter":{"title":"✅ 에러바운더리 도입하기"}}},{"node":{"id":"f85b5d27-6e2c-5dd3-8ca4-1f8b70fb4815","fields":{"slug":"/2024-06-30-2024년-6월회고/"},"frontmatter":{"title":"🤭 2024년 6월회고"}}},{"node":{"id":"e4ae5f2a-10c8-58d3-bacb-6a25ce1b95fc","fields":{"slug":"/2024-06-30-NativeStack적용하기/"},"frontmatter":{"title":"🖥️ Native Stack 적용하기"}}},{"node":{"id":"36c25ccf-f28b-5447-9899-c3d0d414a44f","fields":{"slug":"/2024-08-03-2024년-7월회고/"},"frontmatter":{"title":"👏 2024년 7월회고 "}}},{"node":{"id":"e7ef6c08-c8ff-556b-8f64-b2e61225fa6f","fields":{"slug":"/2024-09-15-2024년-8월회고/"},"frontmatter":{"title":"🥳 2024년 8월회고 "}}},{"node":{"id":"7e844836-6a81-5bd8-a59f-4907b5d6fab3","fields":{"slug":"/2024-09-17-useFunnel-분석해보기/"},"frontmatter":{"title":"📚 useFunnel 분석하고 따라 만들어 보기"}}},{"node":{"id":"54a91c29-22f4-5ec0-ac9b-2902d00e195d","fields":{"slug":"/2024-09-25-로딩경험-개선/"},"frontmatter":{"title":"⏳ 로딩 경험 개선"}}},{"node":{"id":"5d3a72d4-3907-5696-ba59-56b475ad67af","fields":{"slug":"/2024-10-01-2024년-9월-회고/"},"frontmatter":{"title":"9️⃣ 2024년 9월 회고"}}},{"node":{"id":"6ce7e536-b3fc-556d-84f8-09e393e3180e","fields":{"slug":"/2024-10-25-숨고를-떠나며/"},"frontmatter":{"title":"10월 회고, 숨고를 떠나며"}}},{"node":{"id":"f3912500-0fb7-5202-9f96-94405a29c7d7","fields":{"slug":"/2024-11-18-패키지매니저/"},"frontmatter":{"title":"패키지 매니저 비교해보기"}}},{"node":{"id":"f8303667-d369-58a3-bcc5-6d612982cfeb","fields":{"slug":"/2024-11-24-overlay-kit-분석/"},"frontmatter":{"title":"Overlay Kit 분석"}}},{"node":{"id":"e431d5fb-3f76-5190-b63a-51e32f5d7244","fields":{"slug":"/2024-12-01-2024년-11월회고/"},"frontmatter":{"title":"2024년 11월 회고, welcome to 토스"}}},{"node":{"id":"7e7c7b65-d941-5e27-bf28-d0d6785641d8","fields":{"slug":"/2024-12-27-2024년-12월회고/"},"frontmatter":{"title":"2024년 12월 회고, bye bye 2024"}}},{"node":{"id":"ae2f4760-8f15-5064-8fc2-40a0eeb1067e","fields":{"slug":"/2025-01-19-useFunnel-분석/"},"frontmatter":{"title":"new useFunnel 분석해보기"}}},{"node":{"id":"a2e3fd26-8c99-574a-a04b-945acd3397ce","fields":{"slug":"/2025-01-27-2025년-1월회고/"},"frontmatter":{"title":"2025년 1월 회고"}}}]},"previous":{"fields":{"slug":"/2022-09-07-자바스트립트의-두가지-복사방법/"},"frontmatter":{"title":"자바스크립트의 두가지 복사 방법"}},"next":{"fields":{"slug":"/2022-09-10-intersection-observer /"},"frontmatter":{"title":"Intersection observer"}}},"pageContext":{"id":"352ba125-5786-518a-9c7a-303042a0755f","series":null,"previousPostId":"484c98ee-5762-55db-84b4-6b21ae960acf","nextPostId":"10db5919-95c0-53f5-94be-dcbac01e5d37"}},"staticQueryHashes":[],"slicesMap":{}}