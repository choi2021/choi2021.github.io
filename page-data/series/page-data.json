{"componentChunkName":"component---src-pages-series-jsx","path":"/series/","result":{"data":{"site":{"siteMetadata":{"title":"Troy DevLog"}},"allMarkdownRemark":{"group":[{"fieldValue":"CSR","totalCount":1},{"fieldValue":"NextJS","totalCount":1},{"fieldValue":"NodeJS","totalCount":2},{"fieldValue":"React","totalCount":1},{"fieldValue":"SSR","totalCount":1},{"fieldValue":"TDD","totalCount":1},{"fieldValue":"UniversalRendering","totalCount":1},{"fieldValue":"css","totalCount":1},{"fieldValue":"event-loop","totalCount":1},{"fieldValue":"express","totalCount":1},{"fieldValue":"javascript","totalCount":21},{"fieldValue":"performance","totalCount":2},{"fieldValue":"react","totalCount":3},{"fieldValue":"typescript","totalCount":13},{"fieldValue":"vite","totalCount":1},{"fieldValue":"web","totalCount":4},{"fieldValue":"객체지향","totalCount":1},{"fieldValue":"기획","totalCount":3},{"fieldValue":"네트워크","totalCount":4},{"fieldValue":"디자인패턴","totalCount":1},{"fieldValue":"리액트네이티브","totalCount":12},{"fieldValue":"모으잡","totalCount":16},{"fieldValue":"문법","totalCount":11},{"fieldValue":"번들러","totalCount":1},{"fieldValue":"보안","totalCount":1},{"fieldValue":"브라우저","totalCount":2},{"fieldValue":"사이드프로젝트","totalCount":19},{"fieldValue":"에러 모니터링","totalCount":1},{"fieldValue":"에러핸들링","totalCount":1},{"fieldValue":"원티드프리온보딩","totalCount":18},{"fieldValue":"웹","totalCount":1},{"fieldValue":"인터뷰","totalCount":1},{"fieldValue":"취업준비","totalCount":1},{"fieldValue":"포트폴리오","totalCount":4},{"fieldValue":"회고","totalCount":20}],"nodes":[{"excerpt":"🙊 개발자로 일한지 1년이 되다니...  2월은 회사에 입사해 만 1년이 되는 달이었다. 벌써 1년이 되다니, 1년간의 시간 동안 내가 어떤 일을 했고, 어떤 성과를 만들었는지 나와 동료, 회사의 평가를 통해 되돌아 볼 수 있는 시간이었다. 1년간의 나를 되돌아보면서 나에 대해서 리브랜딩(?) 또한 필요하다고 생각이 들어, 블로그를 이전하고 이력서도 새롭…","fields":{"slug":"/2024-03-02-2024년-2월회고/"},"frontmatter":{"date":"March 01, 2024","title":"🙊 2024년 2월회고","tags":["회고","리액트네이티브"],"series":null}},{"excerpt":"1월에는 스쿼드에서 챕터로 소속이 바뀌면서 업무가 기능개발에서, 성능을 최적화하고 안정성을 높이기 위한 업무들이 주를 이루게 되었다.\n크게 집중해서 진행했던 업무는 시간을 최적화와 이었다. 두 가지 챕터 업무와 함께 불필요한 API 호출을 감지하는 방법에 대해 고민하고 해결방법을 찾아 적용해보았다. 1월 업무를 새롭게 배우게 된 점과 느꼈던 점들을 간단히…","fields":{"slug":"/2024-02-07-2024년-1월회고/"},"frontmatter":{"date":"February 07, 2024","title":"🐥 2024년 1월회고","tags":["회고","리액트네이티브"],"series":null}},{"excerpt":"12월에는 제 1회 숨테크 사내 세미나에서 발표 연사로 참여했고, 내가 속해있던 스쿼드의 마지막 작업으로 바로견적 상세화면을 개선하는 작업을 진행했다. 그리고 마지막으로 새벽점검에 참여해 챕터원 중 가장 많은 새벽점검을 한 챕터원이 되었다.\n연말이지만 나름 다사다난했던 12월을 회고해보려한다. 🙋‍♂️ 사내 세미나 발표하기  11월에 참여하겠다고 자신있게 자원…","fields":{"slug":"/2023-12-31-2023년-12월회고/"},"frontmatter":{"date":"December 31, 2023","title":"🌟 2023년 12월 회고","tags":["회고","리액트네이티브"],"series":null}},{"excerpt":"Conditional Types 🤩 타입스크립트에서 조건부 타입은 와 같은 형태로 사용된다. 이는 가 에 할당 가능한지에 따라서 와 중 하나의 타입을 선택하게 된다. 이러한 모습은 기존 javascript의 삼항연산자와 유사하게 느껴진다.  Generic과 함께 사용하기 Generic과 함께 사용하면 더 유용하게 사용할 수 있다. 다음 예제를 보자. In…","fields":{"slug":"/2023-12-19-conditional-types/"},"frontmatter":{"date":"December 19, 2023","title":"Typescript: Conditional Types","tags":["typescript"],"series":"Typescript"}},{"excerpt":"11월은 스쿼드 일감과 함께 챕터업무를 진행한 한달이었다. 에러 예외처리 고도화 일감을 진행하면서 에러바운더리에 대해 공부하고 발표했고, 앞서 10월에 진행하면서 데이터 측정을 위해 구현했던 Firebase Performance util에 대해 소개하며 총 두번의 발표를 했다. 챕터 일감으로 새로운 에러 리포팅 툴인 로그로켓에 대해 검토하고 직접 미팅을 …","fields":{"slug":"/2023-12-02-2023년-11월회고/"},"frontmatter":{"date":"December 02, 2023","title":"😃 2023년 11월 회고","tags":["회고","리액트네이티브"],"series":null}},{"excerpt":"Keyof 는 객체 타입의 키값, 속성에 대한 타입으로 string 또는 numeric literal의 union으로 나타내진다. 이때 또는  인덱스 signature를 가지고 있다면 keyof는 해당 타입을 반환한다. TypeOf  연산자는 자바스크립트 자체가 이미 가지고 있다. 표현식에서 사용가능하고 변수의 타입을 추론할 때 쓰일 수 있다. typeo…","fields":{"slug":"/2023-11-16-keyof,typeof, indexed Access Types/"},"frontmatter":{"date":"November 16, 2023","title":"Typescript: Keyof, TypeOf, Indexed","tags":["typescript"],"series":"Typescript"}},{"excerpt":"Generics Generic은 재사용 가능한 타입을 만드는 방법이다. 앞서 정리한 대로 단순히 type을 number나 string으로 정의하게 되면 타입에 맞게 여러개의 반복된 함수나 변수를 만들어야하는 불편함이 발생한다. 이를 해결하기 위해 우리는 Generic을 이용할 수 있다.   Working with Generic Type Variables …","fields":{"slug":"/2023-11-07-Generics/"},"frontmatter":{"date":"November 07, 2023","title":"Typescript: Generics","tags":["typescript"],"series":"Typescript"}},{"excerpt":"Object Types 자바스크립트에서 object는 정말 자주 쓰이는 자료구조로, 함수의 param의 타입이나 interface, type alias를 이용해서 타입을 지정해서 자주 사용한다. Property Modifier object 타입 속성을 정의할 때 modifier를 통해 추가적인 속성들을 정의해줄 수 있다. Optional 자바스크립트에서 …","fields":{"slug":"/2023-10-31-Object-Types/"},"frontmatter":{"date":"October 31, 2023","title":"Typescript: Object Types","tags":["typescript"],"series":"Typescript"}},{"excerpt":"10월은 9월과 유사하게 스쿼드 업무보다는 챕터 업무에 주된 시간을 보냈던 한달이었지만, 보다 기술적으로 많이 배울 수 있는 시간이었다. 성능 측정을 위한 유틸을 구현해기도 하고, 측정된 데이터를 통해서 더 개선될 수 있는 작업해 주요 도메인을 개선하는 작업에 참여했다. 업무 외적으로 프론트엔드에서 가장 큰 행사인 FECONF에 엠버서더로 참여하는 기회가…","fields":{"slug":"/2023-11-01-2023년-10월회고/"},"frontmatter":{"date":"October 31, 2023","title":"🧐 2023년 10월 회고","tags":["회고","리액트네이티브"],"series":null}},{"excerpt":"More On Functions😃 타입스크립트에서 함수를 다루는 법을 알아보자 Function Type Expressions 타입스크립트에서 fuction을 표현할 때 기본적으로 parameter와 return 값에 대해 타입으로 표현한다. Parameter type의 경우 타입을 정해주지 않으면 any로 정해진다. Call Signatures 자바스크립…","fields":{"slug":"/2023-10-23-MoreOnFunctions/"},"frontmatter":{"date":"October 23, 2023","title":"Typescript: More On Functions","tags":["typescript"],"series":"Typescript"}},{"excerpt":"Everyday Types 😊 이제 기본적인 타입스크립트의 타입들에 대해 알아보자. 대부분 기본적인 부분이라 크게 정리할 부분은 없었다. Primitive 자바스크립트의 기본 타입들인 이 동일하게 타입스크립트에서 사용된다. Arrays 배열은 두가지로 표현할 수 있는데 과 같은 number 배열의 경우 와  두가지로 나타낼 수 있다. any any는 타입…","fields":{"slug":"/2023-10-17-Everyday-Types/"},"frontmatter":{"date":"October 17, 2023","title":"Typescript: EveryDay Types","tags":["typescript"],"series":"Typescript"}},{"excerpt":"타입 좁히기😎 타입스크립트를 이용하면서 다양한 타입을 사용하다보면 확장성을 고려하거나 다양한 타입이 될 수 있다고 정의하는 경우가 많다. 이때 너무 넓은 타입으로 정의될 경우에는 공통된 속성과 메소드만 사용할 수 있기 때문에 이를 방지하기 위해 전달 받을 때는 넓히돼, 사용할 때는 우리가 원하는 타입으로 좁혀줘야 한다.  \n위의 예제는 은 repeat 메…","fields":{"slug":"/2023-10-18-Narrowing/"},"frontmatter":{"date":"October 17, 2023","title":"Typescript: Narrowing","tags":["typescript"],"series":"Typescript"}},{"excerpt":"🧐 타입스크립트를 아세요? 타입스크립트는 내가 매일 사용하지만 나에게 \"타입스크립트를 잘아세요?\"라고 한다면 나는 \"그... 쓸줄은 알아요\"라고만 말할 수 있을 것 같다. 그러면 잘하려면 어떻게 해야할까를 고민해 봤을 때, 나에게 들었던 생각은 \"고개를 들어 공식문서를를 보게하라\"였다. 공식문서 한번 읽지 않고 얼마나 잘할 수 있을까, 책보다도 더 빠르게…","fields":{"slug":"/2023-10-16-the_Basics/"},"frontmatter":{"date":"October 16, 2023","title":"Typescript: The Basics","tags":["typescript"],"series":"Typescript"}},{"excerpt":"9월동안 했던 업무와 학습한 내용들을 돌아보면 스쿼드 업무로는 사내의 새벽점검작업을 참여했고, 우리 제품의 중요한 도메인중 하나인 바로견적에 대한 개선 작업을 했다. 개인적으로는 매일 사용하지만 부족함을 느꼈던 부분들을 공부했다. 😅 처음해본 새벽 점검 작업 견적발송에 관한 책임이 우리 스쿼드로 모두 넘어오면서 추석과 연휴를 앞두고 필요했던 9월 새벽점검…","fields":{"slug":"/2023-10-03-2023년-9월회고/"},"frontmatter":{"date":"October 03, 2023","title":"🚅 2023년 9월 회고","tags":["회고","리액트네이티브"],"series":null}},{"excerpt":"항상 시간은 빠르게 흘러 개발자로 일한지 벌써 6개월이란 시간이 지나버렸다. 이번 한달은 스쿼드의 인원변동이 있어서 업무보다는 모바일 챕터 업무에 많은 시간을 쏟았다. 7월 회고에 언급했던 예외/에러 처리 고도화 작업과 함께 React native 발표 자료들을 찾아보다 발견한 성능 측정 툴인 Flash Light에 대해서 정리해서 챕터 기술 세션에 발표…","fields":{"slug":"/2023-09-09-2023년-8월회고/"},"frontmatter":{"date":"September 09, 2023","title":"😊 2023년 8월 회고","tags":["회고","리액트네이티브","에러핸들링","에러 모니터링"],"series":null}},{"excerpt":"7월의 기억남았던 작업은 이전에 디바이스 서체 설정에 따라 잘리는 것을 막는 방법을 조사했던 것을 일감화해서 직접 트래커를 찍어서 우리 실 사용자들이 어떤 크기로 사용하고 있는지 확인하기도 했고, 받은 요청 화면에서 필터링을 추가해 기능을 더하기도 했다. 또한 7월이 되면서 챕터내의 3분기 일감들을 함께 정하고 그중에 에러/예외처리에 대한 고도화 작업을 …","fields":{"slug":"/2023-08-09-2023년-7월회고/"},"frontmatter":{"date":"August 09, 2023","title":"☂︎ 2023년 7월 회고","tags":["회고","리액트네이티브"],"series":null}},{"excerpt":"6월은 다양한 기술적 주제에 대해 고민이 더 많았던 것 같다. 5월 회고 때 다짐했던 목표 중 하나였던 테스트에 대해 공부하고 실 작업에서 TDD로 개발했던 경험을 간단한 10분정도 세션으로 발표하기도 했고, 디바이스 설정에 따라 앱의 UI가 깨지는 것을 해결하기 위해 방법들을 조사하고, 앱의 하드 버전을 체크하기 위한 작업을 하기도 했다. 그리고 특이한…","fields":{"slug":"/2023-07-06-2023년-6월회고/"},"frontmatter":{"date":"July 06, 2023","title":"☼ 2023년 6월 회고","tags":["회고","리액트네이티브","TDD"],"series":null}},{"excerpt":"5월은 이전 두달과 달리 더욱 다이나믹 했던 것 같다. 개인적인 일로는 수습기간이 끝나고 정식으로 입사하기도 했고, 큰 일감들이 배포된 이후 장애가 발생해 급하게 핫픽스를 하는 등 정말 많은 걸 배우고 느낄 수 있었던 한달이었다. 그중에서 내가 느꼈던 일하는 방식과 기술적 이슈들에 대해 정리해보고자 한다.  드디어 출시된 요청 견적서 작업 원래 우리 스쿼…","fields":{"slug":"/2023-06-05-2023년-5월회고/"},"frontmatter":{"date":"June 05, 2023","title":"☀︎ 2023년 5월 회고","tags":["회고","리액트네이티브"],"series":null}},{"excerpt":"시간이 너무 빠르게 흘러 글을 쓰는 지금은 벌써 5월 5일 어린이날이다. 휴일을 맞아 4월 한달간 했던 업무들을 돌아보고 내가 발전했던 점, 부족했던 점들에 대해 작성해보고자 한다. 😆 드디어 배포된 나의 작업들  4월에 스쿼드에서 작업한 내용들은 두가지로, 회원가입 퍼널을 개선하는 작업과 대시보드에서 커뮤니티로 진입할 수 있게 하는 진입점을 추가하는 작…","fields":{"slug":"/2023-05-06-2023년-4월회고/"},"frontmatter":{"date":"May 05, 2023","title":"😎 2023년 4월 회고","tags":["회고","리액트네이티브"],"series":null}},{"excerpt":"회사에 입사하고 일한 지 한 달이 되었다. 입사일 기준으로 하면 한 달을 넘었지만 3월에 운 좋게 포상휴가를 받아서, 이참에 지금까지 일하면서 배울 수 있었던 부분들을 정리하면 좋겠다고 생각되었다. 회사의 코드에 적응하고, 스쿼드로 함께 일하는 법을 배우고, 챕터의 코드 리뷰를 주고 받으면서 하루 하루 배워나가는 게 너무 많았다. 취업을 준비하면서 단순히…","fields":{"slug":"/2023-03-31-2023년-3월회고/"},"frontmatter":{"date":"March 31, 2023","title":"🐤 2023년 3월 회고","tags":["회고","리액트네이티브"],"series":null}},{"excerpt":"면접에서 디자인 패턴에 대해서 설명해 보라는 질문에 당황한 기억이 있다. 이후 디자인 패턴에 대해서 알아야겠다고 생각했고, 리액트 이전 글에서 MVC와 Flux패턴에 대해서 정리를 했지만, 아직 명확하지 않은 부분이 있었다. 그리고 기존에 개인 프로젝트와 다른 거대한 사이즈의 회사 프로젝트를 다루면서 Repository 패턴에 대해 새롭게 알게 되면서 이…","fields":{"slug":"/2023-03-05-디자인패턴/"},"frontmatter":{"date":"March 05, 2023","title":"MVC, MVVM, Flux패턴 그리고 Service와 Repository 패턴","tags":["디자인패턴"],"series":null}},{"excerpt":"🙄 CDN이란 CDN은 Contents Delivery Network의 약자로 웹페이지, 사진, 데이터를 사용자에게 전달하는 것을 의미한다. 그렇다면 기존 서버가 있는데 왜 CDN이 필요할까? CDN의 필요성  클라이언트가 특정 페이지나 API를 요청하면 서버는 받은 요청에 알맞은 응답을 보내주는 것이 기본적인 네트워크 흐름이다. 결국은 하나의 요청당 하…","fields":{"slug":"/2023-03-01-CDN/"},"frontmatter":{"date":"March 01, 2023","title":"CDN은 뭘까?","tags":["web","네트워크"],"series":null}},{"excerpt":"😁 Google.com 또는 naver.com을 브라우저에 검색했을 때 일어나는 일 면접 단골 질문 중 하나인 Google.com 또는 naver.com을 브라우저에 검색했을 때 일어나는 일은 우리가 서버에 요청을 보내고 응답을 단순히 받는 데에서 그치는 것이 아니라 그 사이에 숨어있는 네트워크 통신과 관련된 과정을 물어보는 질문이다. 면접 과정에서 한번…","fields":{"slug":"/2023-02-21-google.com-입력했을때-일어나는-일/"},"frontmatter":{"date":"February 21, 2023","title":"google.com를 브라우저에 검색했을 때 일어나는 일","tags":["네트워크","인터뷰"],"series":null}},{"excerpt":"개발자가 되기로 마음먹은 2021년 5월부터 HTML, CSS를 시작해 2023년 2월까지 프론트엔드 개발자가 되기 위해 약 1년 반 가량 준비 끝에 드디어 내 자신을 개발자라고 소개할 수 있게 되었다. 1년 반 동안 정말 많은 일이 함께 했다. 22년 2월 대학을 졸업하고, 서울로 올라올 것을 준비해 6개월 간 학원에서 풀타임 강사로 돈을 벌고, 지금까…","fields":{"slug":"/2023-02-17-취업준비-회고/"},"frontmatter":{"date":"February 17, 2023","title":"신입으로 시작하며 작성하는 취준 회고","tags":["회고","취업준비"],"series":null}},{"excerpt":"❤ React hooks React hooks는 리액트가 사랑 받게 된 큰 이유 중 하나로 생각된다. 기존의 주로 사용되던 에서 로 흐름을 바꿀 수 있었던 가장 큰 계기가 hooks의 도입이었다. 베타버전으로 나온 공식 문서를 읽고 그중 가장 자주 사용하는 hooks들의 역할과 내부 동작에 대해 정리해보려 한다. 😁 Rule of Hooks 각각의 Hoo…","fields":{"slug":"/2023-02-03-useState,useEffect, useRef, memo/"},"frontmatter":{"date":"February 03, 2023","title":"React Study: useState, useEffect, useRef, memo","tags":["react"],"series":null}},{"excerpt":"🙋‍♂️ 타입추론 타입추론은 타입스크립트가 우리가 작성한 코드에 대해서 자동으로 타입을 추론해주는 것을 의미한다. 위 person 예제를 보면서 타입 추론이 정확하게 작동하고 있는 것을 볼 수 있다. 타입 추론을 이용했을 때 더 정확하게 타입이 정해지거나, 굳이 명시적으로 타입을 정할 필요가 없을 때에는 타입 구문을 생략하는 게 가독성을 높여준다. 위 예제에서…","fields":{"slug":"/2023-01-24-타입추론 (1)/"},"frontmatter":{"date":"January 24, 2023","title":"TS study: 타입 추론(1)","tags":["typescript"],"series":"Typescript"}},{"excerpt":"🙄 Vite를 사용한 계기 CRA(Create React App)는 리액트에서 공식적으로 밀어주는(?) 보일러 플레이트이다. 기존에 잘 사용해왔기 때문에 기업 과제들을 수행하면서 사용하려 했지만, 원티드 프리온보딩 교육을 받으며 CRA보다 속도가 훨씬 빠른 라는 게 있다는 멘토님의 이야기가 떠올라 사용해보았다. Vite를 사용하면서 실제 빌드속도와 dev…","fields":{"slug":"/2023-01-23-Vite와-번들러/"},"frontmatter":{"date":"January 23, 2023","title":"Vite는 왜 빠를까, 번들러에 대한 정리","tags":["vite","번들러","javascript"],"series":null}},{"excerpt":"😋 리액트의 기본 원리 면접을 통해 리액트의 기본되는 질문들을 받았을 때 라고 자신했었지만, 제대로 답변을 하지 못하는 경우도 많았다. 면접을 기회로 리액트를 더 깊이 있게 이해할 수 있도록 기본부터 다시 정리해보려 한다. 🎆 리액트란 리액트란 라고 정의할 수 있다. 또 다르게 설명하자면 으로도 말할 수 있다. 그렇기 때문에 컴포넌트의 데이터인 Props…","fields":{"slug":"/2023-01-23-리액트의-기본원리/"},"frontmatter":{"date":"January 23, 2023","title":"React study: 리액트의 기본 원리","tags":["react"],"series":null}},{"excerpt":"😁 리액트의 성능 보장방식 저번 면접 시간에 리액트에 대한 질문이 들어왔을 때, 안다고 자신했지만 돌아보니 너무 부족했었던 모습에 리액트 문서 자체를 다시 꼼꼼히 읽고 정리해야겠다는 생각이 들었다. 그중에 이번에 기본 동작원리와 성능과 관련된 useMemo와 useCallback에 대해 정리해 보려 한다. ❓ 왜 리액트를 써야 할까? 먼저 리액트를 쓰면서…","fields":{"slug":"/2022-12-20-리액트-성능보장/"},"frontmatter":{"date":"January 23, 2023","title":"React study: 리액트가 성능을 보장하는 방법","tags":["react","performance"],"series":null}},{"excerpt":"🎚 타입 시스템(3) 타입시스템에 대한 정리 중 마지막으로 제네릭, 인덱스 시그니처, Array 타입과 readonly에 대해 정리해보려 한다. 🕹 제네릭 타입스크립트를 사용할 수록 느끼는 점은 타입을 다룬다는 것은 추가적인 변수와 함수를 다루는 것 같았다. 그 이유는 변수를 재 사용하고 반복되는 로직은 함수로 분리하듯 타입의 재사용성을 고려해야 했기 때…","fields":{"slug":"/2023-01-16-타입시스템-3/"},"frontmatter":{"date":"January 16, 2023","title":"TS study: 타입 시스템 (3)","tags":["typescript"],"series":"Typescript"}},{"excerpt":"🎚 타입 시스템(2) 타입스크립트의 타입 시스템 중 객체 래퍼 타입, 잉여 속성 체크, 함수 표현식, 타입과 인터페이스의 차이에 대해서 정리해보자 한다. 📦 객체 래퍼 타입 문자열을 입력하고 을 찍으면 객체처럼 우리는 다양한 메소드를 이용할 수 있다. 이렇게 가능한 것은 자바스크립트가 을 찍는 순간 에서  객체 래퍼로 타입변환이 이루어진다. 객체로 변환해…","fields":{"slug":"/2023-01-10-타입시스템-2/"},"frontmatter":{"date":"January 10, 2023","title":"TS study: 타입 시스템 (2)","tags":["typescript"],"series":"Typescript"}},{"excerpt":"🎚 타입시스템 타입 시스템은 타입스크립트를 사용하는 큰 이유 중 하나다. 타입을 통해 안전하고 효율적으로 코드를 작성할 수 있게 도와주기 때문에 타입스크립트를 잘한다는 것의 의미가 현재 에 있다. 그렇기 때문에 최대한 구체적으로 타입을 정의하기 위해 타입시스템에 대해 알아보자 🤔 타입 추론 타입스크립트는 똑똑하기 때문에 우리가 작성한 코드에 명시적으로 전…","fields":{"slug":"/2023-01-07-타입시스템-1/"},"frontmatter":{"date":"January 07, 2023","title":"TS study: 타입시스템 (1)","tags":["typescript"],"series":"Typescript"}},{"excerpt":"타입스크립트로 기본적인 타입을 정하고 사용하고 있지만, 매번 막히는 문제들과 잘 사용하는 기준을 세우기 위해  이펙티브 타입스크립트를 읽고 정리해나가려 한다. 🙄 타입 스크립트란 타입스크립트의 인기는 갈수록 증가하고 있다. 왜 타입스크립트가 인기가 높아지고 있는지에 개인적으로 생각해보면 과 과  총 세 가지라고 생각한다. 타입스크립트란 어떤 언어인지, 왜…","fields":{"slug":"/2023-01-02-타입스크립트란/"},"frontmatter":{"date":"January 02, 2023","title":"TS study: 타입스크립트란","tags":["typescript"],"series":"Typescript"}},{"excerpt":"🕶서버사이드 랜더링을 이용한 성능 개선 모으잡 프로젝트 기획과 디자인을 수정하고 나서 그다음 작업으로 성능 개선을 목표로 잡았다. 다른 기능을 추가하기 보다 Next 자체를 좀 더 잘 쓰는 방법에 대해 고민했고 그 방법으로 Next의 장점을 살리려 고민했다. Next의 장점은 이미지 최적화나 코드 스플릿팅 등을 자동으로 지원해 주는 장점도 있지만 가장 큰…","fields":{"slug":"/2022-12-25-모으잡-서버사이드-랜더링을-이용한-성능개선/"},"frontmatter":{"date":"December 25, 2022","title":"모으잡-서버사이드 랜더링을 이용한 성능 개선","tags":["사이드프로젝트","모으잡"],"series":"모으잡"}},{"excerpt":"📋 기획 수정 기존의 모으잡으로 약 6명 정도 지인들에게 보여주고 피드백을 받았다. 피드백들 덕분에 보다 객관적으로 프로젝트를 볼 수 있었다. 먼저 는 점이었다. 맨 처음 볼 수 있는 화면이 로그인 화면이었기 때문에 사용자 경험이 좋지 않다는 피드백을 들었고, 적극 공감했다. 내가 만든 서비스가 어떤 것인지도 모르는데 먼저 회원가입 하라는 것은 설득력이 …","fields":{"slug":"/2022-12-23-모으잡-기획-디자인 수정/"},"frontmatter":{"date":"December 23, 2022","title":"모으잡-기획, 디자인 수정","tags":["사이드프로젝트","모으잡"],"series":"모으잡"}},{"excerpt":"👓 Class 자바스크립트 자체는 프로토타입을 기반으로 객체지향을 지원하는 언어다. 클래스는 클래스에 익숙한 개발자들을 위한 프로토타입의 이라고 불린다. 하지만 클래스가 자바스크립트 내에서 동작하는 방식에 차이점이 존재한다. 클래스에 대해서 알아보자 🙄 클래스의 정체와 호이스팅 먼저 클래스는 자바스크립트에서 다. 자바스크립트에서 함수는 이므로 매개변수, …","fields":{"slug":"/2022-12-23-class/"},"frontmatter":{"date":"December 23, 2022","title":"클래스","tags":["javascript","문법"],"series":null}},{"excerpt":"🔓 SSR을 이용한 인증/인가 도입 이번에 프로젝트를 고민하면서 항상 답답했던 부분이었던 페이지 redirection과 인증 과정에 대해 더 깊이 공부했다. CSR로 처리하던 인증 방식을 SSR로 수정하기까지 과정을 정리해 보려 한다. 😅 Firebase의 API를 이용한 User 상태 관리 기존 Authentication은 firebase Auth를 이…","fields":{"slug":"/2022-12-17-모으잡-인증인가/"},"frontmatter":{"date":"December 17, 2022","title":"모으잡-SSR을 이용한 인증,인가 도입","tags":["사이드프로젝트","모으잡"],"series":"모으잡"}},{"excerpt":"🧨 이벤트 이벤트는 말 그대로 을 의미한다. 언제 어떤 순서로 발생할 지 모르기 때문에 이벤트를 감지할 수 있어야 하고, 감지하고 나서 어떻게 처리 할지에 대해 정해야 한다. 우리가 사용할 때 브라우저에게 이벤트 핸들러를 등록함으로써 이벤트를 위임해 브라우저가 이벤트를 감지하면 해당 핸들러에 등록한 함수를 실행함으로써 이벤트를 처리할 수 있다. 적절한 이…","fields":{"slug":"/2022-12-30-이벤트/"},"frontmatter":{"date":"December 15, 2022","title":"이벤트","tags":["javascript"],"series":null}},{"excerpt":"🎈 생성자 함수과 프로토타입 this를 공부하고 나서 생성자 함수, 프로토타입, 클래스에 대해 한번 정리할 필요성을 느꼈다. 생성자 함수를 시작으로 자바스크립트의 객체지향에 대해 정리해보고자 한다. ✏ 객체를 만드는 방법 생성자 함수도, 클래스도 결국에는 객체를 만드는 방법이다. 그래서 가장 먼저 자바스크립트에서 객체를 만드는 방법에 대해서 정리해 보고자…","fields":{"slug":"/2022-12-12-생성자함수-프로토타입/"},"frontmatter":{"date":"December 12, 2022","title":"생성자 함수, 프로토타입","tags":["javascript","객체지향"],"series":null}},{"excerpt":"이번에 핀테크 기업의 면접을 처음으로 보면서 네트워크 통신에 대해 잘 모른다는 것을 많이 느꼈다. 가장 기본적인 http/https부터 쿠키와 로컬스토리지, 세션스토리지 등을 주제로 하나씩 정리해 보고자 한다. 🔓 http와 https  면접의 첫 질문이었다. 내 대답은 http와 https의 가장 큰 차이점은 보안에 있습니다 였다. 면접관님께서 주신 다…","fields":{"slug":"/2022-12-10-http와https/"},"frontmatter":{"date":"December 10, 2022","title":"http와 https","tags":["네트워크"],"series":null}},{"excerpt":"🔏 Cookie,Session, JWT 모으잡의 Next-auth를 고려하면서 Cookie,Session, JWT에 대해 다시 정리할 필요성을 느꼈다. 각각의 문제점과 해결과정들을 정리하고 보안을 어떻게 고려해서 각각을 사용할 수 있을지 정리해보았다. 인증과 인가란 인증과 인가, 단어 만으로는 구분이 잘 안 가서 먼저 정리가 필요했다. 인증은 정보를 이용…","fields":{"slug":"/2022-12-09-쿠키-session-jwt/"},"frontmatter":{"date":"December 09, 2022","title":"Cookie,Session과 JWT","tags":["웹","보안"],"series":null}},{"excerpt":"👉 This 자바스크립트에서 this는 \"동적\"으로 정해진다라고 한다. 기존 객체지향 언어들과는 다르게 작동하는 자바스크립트의 this에 대해 정리해 보려 한다. 🙋‍♂️ This란 this는 자신이 속한 객체 또는 만들어 질 인스턴스를 가리키는 변수이다. 이해를 위해 다음 코드를 보자 square 객체의 getArea 메소드는 distance를 이용해 넓이를…","fields":{"slug":"/2022-12-09-this/"},"frontmatter":{"date":"December 09, 2022","title":"this","tags":["javascript","문법"],"series":null}},{"excerpt":"☝ 호이스팅 자바스크립트 엔진은 변수와 함수의 선언을 선언단계와 초기화 단계, 두 단계로 나누어 처리한다. 이렇게 두 가지 단계로 나누어 처리하다 보니, 마치 선언을 스코프 최상단으로 올려서 하는 것처럼 보이게 되는데, 이것을 호이스팅이라고 한다. 변수와 함수 두가지를 나눠서 앞서 정리했던 실행 컨텍스트와 함께 호이스팅을 정리해보려 한다. 🙋‍♂️선언이란 먼저…","fields":{"slug":"/2022-12-05-호이스팅/"},"frontmatter":{"date":"December 05, 2022","title":"호이스팅","tags":["javascript","문법"],"series":null}},{"excerpt":"🛠 리팩토링 프로토타입을 만들고, 프로토타입에 대한 리드미 작성까지는 끝났다. 하지만 급하게 진행하다 보니 아직 손봐야 할 곳이 많이 보였다. 주변에 피드백을 받아서 고쳐야 할 부분들을 수정하고 수정 과정을 담아보려 한다. 🎃 느린 check 박스 checkbox 기능은 해당 공고의 자격 조건과 우대 사항에 얼마나 해당되는지 기록하고, 50%이상일 경우 …","fields":{"slug":"/2022-12-03-모으잡-리팩토링/"},"frontmatter":{"date":"December 03, 2022","title":"모으잡-check box 수정, react-query 커스텀 훅, 크롤링 이슈","tags":["사이드프로젝트","모으잡"],"series":null}},{"excerpt":"💎 제너레이터와 Async-Await EO 채널의 시니어 개발자분들의 이력서 관련 팁을 말씀해 주시는 영상을 본 적이 있다. 그때 한 시니어 개발자분께서 \"skill란에 자바스크립트를 잘한다고 하면서 제너레이터를 물어보면 제대로 설명 못하는 사람을 있다\"라고 말씀하셨다. 그 말씀에 \"제너레이터? 이터러블 객체를 편하게 만들 수 있는 것 아닌가\"라고 나는 …","fields":{"slug":"/2022-12-02-제너레이터와-async-await/"},"frontmatter":{"date":"December 02, 2022","title":"제너레이터와 Async-Await","tags":["javascript","문법"],"series":null}},{"excerpt":"✨ vercel로 간단하게 배포... 라고 할 뻔 누가 그랬다... next js는 vercel에서 만들었으니까 vercel을 이용하면 배포가 뚝딱이라고. 나의 경우에는 그게 안되었다.. 어제 28일 오후 8시부터 새벽 5시까지의 사투를 작성해보려 한다. Vercel 무료이고, CI/CD가 자동화되었고, next js를 만든 회사이기 때문에 연동이 잘될 …","fields":{"slug":"/2022-11-30-모으잡-배포/"},"frontmatter":{"date":"November 30, 2022","title":"모으잡-vercel부터 aws까지 배포과정","tags":["사이드프로젝트","모으잡"],"series":"모으잡"}},{"excerpt":"🙋‍♂️ 지스트 청원서비스 지스트 청원서비스는 8명으로 이루어진 Better IT팀이 2021년 7월에 팀빌딩을 시작해 2022년 3월 14일에 런칭, 현재는 학교에서 운영되고 있는 프로젝트다. 나는 2021년 11월부터 참여해 4월까지 참여했고, 코딩 공부를 시작하고 처음으로 참여한 팀 프로젝트였다. 그때 배웠던 많은 것들이 토대가 되어, 혼자 프로젝트를 할…","fields":{"slug":"/2022-11-30-지스트-청원-서비스-회고/"},"frontmatter":{"date":"November 30, 2022","title":"지스트 청원서비스 회고","tags":["회고","사이드프로젝트"],"series":null}},{"excerpt":"📁DB연결 개인 별 채용공고들의 정보를 저장하기 위해서 Firebase의 realtime database를 추가해 연결했다. firebaseApp은 이미 인증/인가 기능을 추가하면서 만들어 두었기 때문에 DBService의 interface를 이용한 class를 추가해 구현했고, 해당 api를 이용할 때는 react-query를 이용했다. DB는 이전 채…","fields":{"slug":"/2022-11-29-모으잡 DB연결과-크롤링-기능-연결/"},"frontmatter":{"date":"November 29, 2022","title":"모으잡-DB연결과 크롤링 기능 연결","tags":["사이드프로젝트","모으잡"],"series":"모으잡"}},{"excerpt":"💡 비동기와 프로미스 \"동기다, 비동기다\", 자바스크립트를 사용하면서 많이 들어온 말이다. 비동기와 프로미스를 이해한다는 것은 프로그램의 흐름을 이해하고 성능 최적화, 에러 핸들링 등을 처리할 수 있는 아주 중요한 요소이기 때문에 정리해 보고자 한다. 먼저 동기와 비동기란 뭘까? 📂동기와 비동기 위 그림의 동기적인 과정은 하나의 일이 끝날 때까지 기다렸다…","fields":{"slug":"/2022-11-27-비동기와-프로미스/"},"frontmatter":{"date":"November 27, 2022","title":"비동기와 프로미스","tags":["javascript","문법"],"series":null}},{"excerpt":"🔑 회원가입/로그인 페이지 회원가입과 로그인을 통해서 개인 별로 채용공고를 관리하기 위해서 회원가입/로그인 페이지를 만들었다. 페이지를 만들면서 고민했던 과정을 정리해보았다. 🎨 디자인 디자인은 원티드의 로그인/회원가입 페이지를 참고했는데 컨텐츠를 모바일 사이즈인 400px를 기준으로 만들어 모바일과 데스크 탑에서 동일하게 보일 수 있게 했다. 이것을 참…","fields":{"slug":"/2022-11-25-모으잡-회원가입로그인-로직/"},"frontmatter":{"date":"November 25, 2022","title":"모으잡-firebase를 이용한 회원가입 로직 구현","tags":["사이드프로젝트","모으잡"],"series":"모으잡"}},{"excerpt":"우리가 당연하게 생각하고 있는 컴퓨터를 켜서,크롬을 누르면 브라우저 화면을 보여준다는 것은 사실 어마어마한 작업이 뒤에서 돌아가고 있다. 브라우저가 해당 url을 서버에 요청하고 필요한 정보를 서버가 응답으로 보내줬을 때, 그 결과 ( html, css, javascript )를 우리에게 그려주는 과정, Critical Rendering Path에 대해 …","fields":{"slug":"/2022-11-24-Critical-Rendering-Path/"},"frontmatter":{"date":"November 24, 2022","title":"💻 Critical Rendering Path","tags":["web","javascript","event-loop","performance"],"series":null}},{"excerpt":"⚒ 모으잡 프로젝트 수정하기 프리온보딩 코스가 끝나고 이력서를 수정하며, 모으잡 프로젝트를 프로토타입으로 먼저 제작하기로 결정했다. 기존의 한계점은 schema를 짜고, 서버를 만들어두었지만, 별도의 CRUD 처리를 하기보다 단순히 크롤링 결과만 json으로 전달해주는 역할만 했다. 서버가 간단한 역할만 한다면 Next js의 서버를 이용해 api로 전달…","fields":{"slug":"/2022-11-23-모으잡-Next-migration/"},"frontmatter":{"date":"November 23, 2022","title":"모으잡-Next js로 migration, 디자인 수정","tags":["사이드프로젝트","모으잡"],"series":"모으잡"}},{"excerpt":"스코프는 식별자 (변수, 함수, 클래스)가 참조될 수 있는 범위, 식별자를 검색하는 규칙을 의미한다. 이 범위는 코드 블록으로 구분되어져, {}로 감싸지는 함수, if나 switch 조건문, for 문 등으로 내부에 선언된 변수는 외부에서는 접근할 수 없는 특징을 가진다. 마치 썬팅된 자동차의 운전자는 외부를 볼 수 있지만 자동차 외부에서는 안을 볼 수 …","fields":{"slug":"/2022-11-20-스코프-실행컨테스트-클로저/"},"frontmatter":{"date":"November 20, 2022","title":"스코프,실행컨텍스트,클로저","tags":["javascript","문법"],"series":null}},{"excerpt":"드디어 프리온보딩 코스의 마지막 과제가 되었다. 정리했던 NEXT JS를 공부한 내용과 과제를 하면서 해결해나간 에러들, 멘토님의 피드백을 받았던 부분들을 작성해 보고자 한다. 📜 과제 설명 마지막 과제는 일주일 동안 핀테크 기업의 관리자 서비스 페이지를 제작하는 것이었다. 회원가입/로그인 페이지와 메인 보드 페이지 두 가지 페이지를 제작해야 했다. 기술…","fields":{"slug":"/2022-11-19-원티드-프리온보딩-마지막 과제회고/"},"frontmatter":{"date":"November 19, 2022","title":"원티드 프리온보딩 마지막 과제회고","tags":["회고","원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"👓 Next JS \nNext js는 typescript와 함께 프론트엔드의 뉴노멀이라고도 불리는 프레임워크로, 내가 관심이 갔던 대부분의 기업들에서 사용하고 있는 기술이다. 기술을 이해하기 위해서 먼저 웹의 역사를 먼저 정리해 보고, CSR과 SSR의 각각의 장단점과 둘의 방식을 합친 Universal Rendering을 정리해보고자 한다. 💿MPA(Mu…","fields":{"slug":"/2022-11-18-CSR과-SSR/"},"frontmatter":{"date":"November 18, 2022","title":"CSR과 SSR 그리고 Universal Rendering","tags":["NextJS","React","web","CSR","SSR","UniversalRendering"],"series":null}},{"excerpt":"📜 과제 설명 이번 과제는 간단하게 하나의 페이지로 되어있고 검색창과 검색어 추천 기능을 구현하는 과제였다. 검색창을 UI로 구현한 후에 검색창에 입력에 따라 관련된 추천 검색어를 api를 이용해 받아와 보여주면 되는 간단해 보였던... 하지만 하나하나 공부할 게 많았던 유익한 과제였다. 세부 부분은 총 4가지로 다음과 같이 정리할 수 있다. 추천 검색어…","fields":{"slug":"/2022-11-11-원티드 프리온보딩-3-1-과제-회고/"},"frontmatter":{"date":"November 11, 2022","title":"원티드 프리온보딩 3-1 과제회고","tags":["회고","원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"📜 과제 설명 이번 과제는 이번 기간에 참가한 기업의 과제는 아니지만 이전 기수에서 주어졌던 과제로, 멘토님께서 좋은 과제라 생각하셔서 넣으셨다고 했다. 기업은 광고 회사로 광고와 마케팅과 관련된 데이터들을 보여 주는 대시보드와 관리 페이지를 만드는 과제였다. 난생 처음 보는 용어들과 너무 디테일 하게 구성되어있는 피그마 페이지 때문에 여태 까지 과제들 …","fields":{"slug":"/2022-11-07-원티드 프리온보딩-2-2-과제-회고/"},"frontmatter":{"date":"November 07, 2022","title":"원티드 프리온보딩 2-2 과제회고","tags":["회고","원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"📜 과제 설명 이번 과제는 기업과제로 주어진 피그마의 디자인과 api를 이용해 2가지 페이지를 구현해야했다. 페이지는 차량리스트를 보여주는 Home페이지, 해당 차량의 정보를 보여주는 detail페이지로 구성되어 있으며, 추가 구현사항으로 페이스북과 카카오톡에 공유시 해당 이미지와 차량정보들을 보여줄 수 있어야하는 SEO가 있었다. 과제 자체는 저번 과제…","fields":{"slug":"/2022-11-04-원티드 프리온보딩-2-1-과제-회고/"},"frontmatter":{"date":"November 04, 2022","title":"원티드 프리온보딩 2-1 과제회고","tags":["회고","원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"🧨1-2 과제 회고 원티드 프리온보딩 두 번째 과제는 github API를 이용해 두 가지 페이지 (이슈 목록과 상세 페이지)를 만드는 과제였다. 세부적인 요구사항에서 가장 중요했던 부분은 리스트에서 Github API 데이터 요청, context API를 활용한 API연동, 다섯 번째 셀에 광고이미지를 넣어줄 것, 스크롤을 내리면 이슈 목록에 추가 로딩…","fields":{"slug":"/2022-10-31-원티드 프리온보딩-1-2-과제-회고/"},"frontmatter":{"date":"October 31, 2022","title":"원티드 프리온보딩 1-2 과제회고","tags":["회고","원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"초기세팅 커밋 합치기 협업을 위해 ESLint, Prettier를 처음 사용하다보니 규칙들을 추가하고 업데이트를 해갈 필요가 있었다. 그러다 보니 한줄한줄이 추가된 자잘한 커밋들이 쌓여서 보기가 안좋아 이번 프로젝트를 하면서 같이 정했던 규칙들을 추가해 하나로 합친 commit history로 합치자는 생각이 들었다. commit message 컨벤션이 …","fields":{"slug":"/2022-10-28-원티드 프리온보딩-1주차-4일/"},"frontmatter":{"date":"October 28, 2022","title":"원티드 프리온보딩 1주차 첫째주 4일차-초기세팅 커밋 합치기","tags":["원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"투두 best case 프로젝트 어제 회의를 통해 정한 best case들을 프로젝트에 적용하기 위해 협업 tool 세팅과 합치면서 생긴 시행착오득을 정리해보려 한다. 🧐 협업툴 설정 협업툴인 ESLint, prettier, husky를 이용한 git hook 세가지를 설정하면서 겪었던 에러들을 정리해보았다. 1. Husky Prettier 자동화 윈도우…","fields":{"slug":"/2022-10-27-원티드 프리온보딩-1주-3일차/"},"frontmatter":{"date":"October 27, 2022","title":"원티드 프리온보딩 1주차 첫째주 과제 3일차-best case 프로젝트 회고","tags":["원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"1주차-첫번째 섹션 협업툴: 문서화 기대하고 떨리기도 했던 프리온보딩 코스가 오늘부터 시작되었다. 세션의 주제는 \"\"협업 tool\"이었다. 채용공고에서 한번씩 보이던 esLint와 prettier, git, 그리고 처음 알게 된 git hook과 husky에서 다룬 시간이었다. 오늘 수업을 들으면서 \"왜 ESLint와 prettier를 채용공고에 넣었을까…","fields":{"slug":"/2022-10-25-원티드프리온보딩-1주차-1일/"},"frontmatter":{"date":"October 25, 2022","title":"원티드 프리온보딩 1주차 1-1 협력툴:ESLint,Prettier,Git Hook, Husky","tags":["원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"사전 과제 정리 팀원들의 사전 과제들을 서로 발표하고 어떤 점이 좋은지, 왜 이렇게 했는지 서로 의논하고 피드백을 하는 시간을 삼았다. 발표를 위해 먼저 내가 한 사전 과제를 정리해보고 내가 어떤 점이 부족했는지 보완해서 발표하는 시간을 가졌다. 🔨 수정사항 먼저 수정한 부분은 api들을 클래스로 주입해주는 방식이었다. 단순히 함수를 불러와서 쓰는 것이 …","fields":{"slug":"/2022-10-25-원티드프리온보딩-1주차-2일/"},"frontmatter":{"date":"October 25, 2022","title":"원티드 프리온보딩 1주차 첫째주 과제-best case찾기와 보충공부:context API","tags":["원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"UI 수정 어제 생각했던 카드를 필터링 할 수 있는 버튼들을 추가하고, 원티드 로고를 추가했다. 서버에서 크롤링 할 때 이미지를 함께 받아올 수 있게 로직을 추가해 조금 더 디자인 적으로 채웠다. 개선 UI\n\n그리고 원티드의 포트폴리오 관련 자료를 보다가 서비스를 조금 더 발전 시킬 수 있는 포인트를 얻을 수 있었다. 원티드 포트폴리오를 부탁해  포트폴리…","fields":{"slug":"/2022-10-25-모으잡-UI-수정-크롤링-데이터-연결/"},"frontmatter":{"date":"October 25, 2022","title":"모으잡-프론트페이지 UI수정, 크롤링한 데이터 받아오기","tags":["사이드프로젝트","모으잡"],"series":"모으잡"}},{"excerpt":"채용공고서비스 UI 제작 채용공고서비스 UI를 고민하면서, 정리하는 형식들을 참고하게 되었다. 기존의 서비스를 구상했던 이유가 자동화해서 받아오는 편리함도 있지만, 공고를 쉽게 비교하고 중요내용만 간략하게 보기 위해서 였다. 그러기 위해서는 받은 내용을 보여줄 UI디자인이 중요했고, 참고한건 \"evernote\" 어플리케이션이다. Evernote  Ever…","fields":{"slug":"/2022-10-24-모으잡-프론트페이지-UI제작/"},"frontmatter":{"date":"October 24, 2022","title":"모으잡-프론트페이지 UI제작","tags":["사이드프로젝트","모으잡"],"series":"모으잡"}},{"excerpt":"Puppeteer Puppeteer는 Chrome브라우저에서 사용할 수 있는 devtools API를 제공하는 Node js 라이브러리이다. 이전에 사용했던 Selenium과 같이 브라우저를 접속해서 이벤트 발생 등 다양한 api를 지원한다. 차이점이라면 Puppeteer는 크롬위에서만 동작하기 때문에 다른 브라우저에서는 사용할 수 없다. 하지만 성능이 …","fields":{"slug":"/2022-10-23-모으잡-puppeteer-크롤러제작-프론트페이지-구상/"},"frontmatter":{"date":"October 23, 2022","title":"모으잡-puppeteer을 이용한 크롤러제작, 프론트페이지 구상","tags":["사이드프로젝트","모으잡"],"series":"모으잡"}},{"excerpt":"공부를 바탕으로 서버를 만들기 전에 우선 서버의 어떤 기능이 필요할 지 먼저 정리한 후에, 직접 서버를 만들었다. SCHEMA Job data 스크롤러로 받아올 데이터 내용은 회사이름, 주요업무, 자격요건,  우대사항, 플랫폼, url 으로 정했다. GET /jobs 데이터베이스에 저장되어있는 공고들을 받아온다. GET /jobs?platform=:pla…","fields":{"slug":"/2022-10-22-모으잡-express-서버-제작-시작-cheerio/"},"frontmatter":{"date":"October 22, 2022","title":"모으잡-express 서버 제작 시작과 cheerio","tags":["사이드프로젝트","모으잡"],"series":"모으잡"}},{"excerpt":"CORS란 CORS는 Cross-Origin Resource Sharing의 약자로, 서버가 알고있는 클리언트의 url에서 요청시에 응답을 막을 수 있는 보안 기능이다. 같은 도메인끼리 밑의 예로 https://localhost:3000이란 주소로 서버와 클라이언트가 작동하고 있다면 둘은 아무 문제 없이 요청과 응답을 한다. 하지만 도메인이 달라질 경우에…","fields":{"slug":"/2022-10-20-모으잡-cors-에러핸들링/"},"frontmatter":{"date":"October 20, 2022","title":"모으잡-express cors 에러, 에러핸들링","tags":["사이드프로젝트","모으잡"],"series":"모으잡"}},{"excerpt":"✨ Express express는 노드 JS의 프레임워크로 앞서 만든 Node js의 코드 복잡도를 줄여주고, 쉽게 서버를 만들 수 있게 도와준다. express의 가장 큰 특징은 middleware의 체이닝이라고 할 수 있다. 미들웨어들이 연결되어있어, 처리할 수 있는 요청에 대해서 해당 미들웨어 내에서 처리하고, 담당 미들웨어에서 처리할 수 없는 요청…","fields":{"slug":"/2022-10-19-Express-기초/"},"frontmatter":{"date":"October 19, 2022","title":"NodeJS: express","tags":["NodeJS","express"],"series":null}},{"excerpt":"🎈 Node JS란 노드 JS는 브라우저밖에서도 자바스크립트를 사용할 수 있는 자바스크립트 런타임 환경이다. single thread 언어인 Javascript가 브라우저 위에서 browser API를 이용한 비동기 처리로 다양한 일을 처리할 수 있었던 것 처럼, Node JS 또한, 자체 API를 이용해서 비동기 처리를 이용해 다양한 기능을 구현할 수 …","fields":{"slug":"/2022-10-18-Node-JS-기초/"},"frontmatter":{"date":"October 18, 2022","title":"Node js:NodeJS 이용한 서버 만들기","tags":["NodeJS"],"series":null}},{"excerpt":"Flask를 이용한 서버 제작 flask는 파이썬의 프레임워크로 아주 간단한 방법으로 서버를 구축할 수 있다. flask를 사용하는 방법은 엄청나게 쉬웠는데 route를 연결하고, route에 해당하는 페이지를 간단하게 함수를 이용해서 rendertemplate로 return해주면 해당 페이지를 만들 수 있었다. rendertemplate를 이용할 때 주…","fields":{"slug":"/2022-10-17-flask-서버만들기/"},"frontmatter":{"date":"October 17, 2022","title":"모으잡-flask이용해 SSR서버만들기","tags":["사이드프로젝트","모으잡"],"series":"모으잡"}},{"excerpt":"파이썬을 이용해 웹크롤러 제작하기 웹크롤러는 데이터를 최신 상태로 유지하거나 웹페이지에 있는 원하는 정보를 추출하는 기술로, 일일이 사용자가 웹페이지를 돌아다니면서 정보를 수집하는 것을 대신해서 방문해 원하는 정보들을 수집해 줄 수 있어 자동화에 용이한 기술이다. 웹크롤러를 만드는 다양한 영상이 유튜브에 있지만 노마드코더(https://nomadcoder…","fields":{"slug":"/2022-10-16-파이썬을-이용한-크롤러제작/"},"frontmatter":{"date":"October 16, 2022","title":"모으잡-파이썬을 이용한 웹크롤러 제작","tags":["사이드프로젝트","모으잡"],"series":"모으잡"}},{"excerpt":"9월 말에 생각해두었던 채용공고 정리 사이트를 이번 주부터 본격적으로 만들어 보고자 한다. 급하게 한 주 안에 최대한 만드는 것을 목표로 잡았는데, 이유는 다음 주에 프리온보딩 코스 평가 결과가 나오기 때문에, 만약 합격한다면, 내 프로젝트 자체를 새롭게 기획하고 만들기 보다는, 과제를 하고, 새롭게 알게 된 걸로 프로젝트들을 수정하는 방향으로 시간을 써…","fields":{"slug":"/2022-10-15-모으잡-기획-구체화/"},"frontmatter":{"date":"October 15, 2022","title":"모으잡-기획 구체화","tags":["사이드프로젝트","모으잡","기획"],"series":"모으잡"}},{"excerpt":"새롭게 배운 내용 사전과제의 요구사항 자체는 그렇게 복잡하지 않았다. 하지만 과제를 처음 만들고 나서, 다시 돌아보면서 코드를 고쳐나가면서 배우는 게 많았다. 1. HTTP 통신에 대한 이해 사전과제를 하는 과정에서 wanted에서 제공해 준 서버의 url이 바뀐 적이 있었다. 4시간 정도 구글링도 하고, wanter에서 제공해준 로컬 서버를 클론해와서 …","fields":{"slug":"/2022-10-13-원티드 프리온보딩사전과제회고/"},"frontmatter":{"date":"October 13, 2022","title":"원티드 프리온보딩 사전과제-회고","tags":["회고","원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"최적화를 위한 todo Btn 컴포넌트 분리 TodoItem은 memo를 통해 최적화를 해두었기 때문에 투두 아이템에 클릭을 하면 다른 투두아이템들이 re-rendering되는 것은 막았다. 하지만 같은 TodoItem 내부에서 클릭되지 않은 버튼들이 다시 re-rendering이 되는 것을 보고, TodoBtn 컴포넌트로 분리하고 memo로 감싸준 다음…","fields":{"slug":"/2022-10-12-원티드프리온보딩과제-8/"},"frontmatter":{"date":"October 12, 2022","title":"원티드 프리온보딩 사전과제 8편","tags":["원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"1. 최적화와 배포 에러 핸들링을 하기 전에 내일까지 배포하는 것이 목표이기 때문에 그전에 여태까지 한 작업들을 최적화하고 배포를 먼저 한 후에 readme작성을 하게 되었다. 우선 최적화는 memo와 useCallback을 이용해 auth와 todo페이지의 불필요한 re-rendering을 막았다. 1.1 auth 페이지  auth 페이지에서는 회원가입…","fields":{"slug":"/2022-10-11-원티드프리온보딩과제-7/"},"frontmatter":{"date":"October 11, 2022","title":"원티드 프리온보딩 사전과제 7편 ","tags":["원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"남은 리팩토링할 부분들은 axios와 api 예외사항으로 둘다 http 통신과 연관되어있다는 공통점이 있어서 함께 처리해보려 했다. 1. API 예외사항 과제에서 요구하는 부분이 많지 않아 크게 어려움은 없었지만 작성 중에 마주쳤던 에러 사항들에 대해 정리하면 다음과 같다. 컴포넌트 Status code 내용 회원가입 400 Bad Request 동일한 …","fields":{"slug":"/2022-10-10-원티드프리온보딩과제-6/"},"frontmatter":{"date":"October 10, 2022","title":"원티드 프리온보딩 사전과제 6편","tags":["원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"리액트 폴더, 파일 구조 어제 리팩토링에 이어 폴더와 파일구조에 대해 먼저 고민해보았다. 최근에 혼자 프로젝트를 하다보니 파일 구조에 대해서는 크게 생각해본 적이 없었다. 지스트 청원 서비스 같은 경우에는 친구들과 함께 의논하면서 convention을 정해서 했지만 혼자 할 때는 크게 고민을 안했던 부분이라 이번 기회에 한 번 정리하면 좋을 것 같다는 생…","fields":{"slug":"/2022-10-09-원티드프리온보딩과제-5/"},"frontmatter":{"date":"October 09, 2022","title":"원티드 프리온보딩 사전과제 5편","tags":["원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"어제 과제에서 요구하는 전반적인 요구사항에 대한 기능은 개발했지만 리팩토링을 할 부분을 세부적으로 많이 보였다. 리팩토링 할 부분들을 정리해보면 다음과 같다. 회원가입과 로그인의 코드중복: 만들다 보니 너무 똑같은 styling과 api 사용이 반복되어서 수정이 필요하다. 폴더나 파일 구조 설계: 리액트를 개인프로젝트를 주로하다보니 폴더 설계나 어떤 곳에…","fields":{"slug":"/2022-10-08-원티드프리온보딩과제-4/"},"frontmatter":{"date":"October 08, 2022","title":"원티드 프리온보딩 사전과제 4편","tags":["원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"어제에 이어서 과제를 이어서 해나갔다. 4번째와 5번째는 Todo list를 만드는 것으로 많이 해봐서 쉬울 줄 알았지만 API로 todo를 CRUD하기 때문에 조금 달라 찾아보는데 시간이 걸렸다. Assignment 4) 네 번째 과제의 내용은 다음과 같다.  과제를 스타일링과 API를 연결하는 두 가지 일로 분리해서 작업했다. 1. 스타일링 스타일링을…","fields":{"slug":"/2022-10-06-원티드-프리온보딩-과제-3편/"},"frontmatter":{"date":"October 06, 2022","title":"원티드 프리온보딩 사전과제 3편","tags":["원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"어제 온보딩 과제를 하면서 API들 사용할 때, 각 메소드들을 이해하지 않고 사용하고 있다는 점이 많이 느껴져 캡틴판교님의 블로그 와 드림코딩의 Node.js 강의 참고해서 한번 정리해보려 한다. HTTP 프로토콜이란 HTTP 프로토콜은 HyperText Transfer Protocol의 약자로 클라이언트와 서버가 서로 통신하는데 필요한 규약/약속을 의미…","fields":{"slug":"/2022-10-06-HTTP란/"},"frontmatter":{"date":"October 06, 2022","title":"HTTP 정리","tags":["네트워크"],"series":null}},{"excerpt":"Assignment 2) 어제에 이어 API 에러를 해결하기 위해 다시 시도했지만 여전히 같은 에러가 보였다. 뭐가 잘못된건지 다시 한번 확인하러 안내페이지에 다시갔더니....  API 주소가 바뀌어 있었다....ㅜㅜㅜㅜ 어제 안된건 내가 잘못 입력한 게 아니라 진짜 서버가 꺼져있었거나, 주소를 잘못 제공받았던건가 보다...  API주소가 처음부터 맞게 …","fields":{"slug":"/2022-10-05-원티드-프리온보딩-과제-2편/"},"frontmatter":{"date":"October 05, 2022","title":"원티드 프리온보딩 사전과제 2편","tags":["원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"기다리던 프론트엔드 원티드 프리온보딩이 열렸다. 이번주는 프리온보딩 사전과제를 수행하면서 겪은 시행착오에 대해서 정리해 보려한다. Assignment 1) 과제 첫번째는 다음과 같은 조건이다.  로그인/ 회원가입을 페이지를 만들고 유효성 검사를 진행하는데 간단하게 이메일은 @을, 비밀번호는 8자 이상이면 되는 조건이라 간단하게 할 줄 알았지만 예상치 못한…","fields":{"slug":"/2022-10-04-원티드-프리온보딩-과제-1편/"},"frontmatter":{"date":"October 04, 2022","title":"원티드 프리온보딩 사전과제 1편","tags":["원티드프리온보딩"],"series":"원티드프리온보딩"}},{"excerpt":"대부분의 기능은 어제 완료했기에 전체적으로 돌아보면서 반응형 적용과 성능 최적화에 포커스를 두고 작업했다. 1) 반응형 적용 항상 반응형으로 만들 때 느끼는 점이지만 처음 기획을 할 때, 모바일 버전을 고려하지 않으면 브라우저 버전에서 생각했던 기능을 아예 빼버려야 할 때도 생긴다. 이번에 만들 때는, 처음부터 모바일 버전을 많이 생각하고 기획해서 조금 …","fields":{"slug":"/2022-10-03-포트폴리오-제작-3편/"},"frontmatter":{"date":"October 03, 2022","title":"포트폴리오 제작-반응형,배포까지","tags":["포트폴리오"],"series":"포트폴리오"}},{"excerpt":"어제에 이어 포트폴리오 Main화면을 완성했다. 4가지 섹션중에서 Projects만 남았었고, Home화면만 추가해주면 기획했던 모든 부분을 완성하기에 오늘 안에 최대한 마무리 해보려 했다. 1) Projects 페이지 제작 Projects는 슬라이더를 통해 프로젝트에 대한 설명과 사진을 보여주게 디자인했었다. 슬라이더 기능을 위해서는 총 3가지 로직이 …","fields":{"slug":"/2022-10-02-포트폴리오-제작-2편/"},"frontmatter":{"date":"September 29, 2022","title":"포트폴리오 제작-슬라이더, 페이지전환 애니메이션","tags":["포트폴리오"],"series":"포트폴리오"}},{"excerpt":"1) Navbar & Card 와 상태 연결 어제 했던 기획에 이어 추가적으로 상태와 상태에 따른 버튼 로직을 연결해주었다. 간단하게 main에 selectedSection이란 상태를 만들고 setSelectedSection으로 클릭된 버튼이나 카드에 따라 상태를 변경 해주는 로직이다. 간단하게 추가한 로직이지만 조금 의문이 들었던 점은 Javascrip…","fields":{"slug":"/2022-10-01-포트폴리오-제작-1편/"},"frontmatter":{"date":"September 29, 2022","title":"포트폴리오 제작-메인 페이지 제작","tags":["포트폴리오"],"series":"포트폴리오"}},{"excerpt":"리액트를 어느정도 공부한 걸 정리하고, 적용해볼 겸 포트폴리오 사이트를 제작해보려 했다. 내가 생각하는 포트폴리오 사이트는 보는 사람이 우와할만한 디자인도 너무 중요하지만 내가 어떤 사람인지 잘 드러내는것이 가장 중요하다고 생각되었다. 이력서로는 담을 수 없는 내 이야기, 나라는 사람에 대해 궁금한 사람들이 나를 이해할 수 있도록 기획하고 디자인하는 게 …","fields":{"slug":"/2022-09-28-포트폴리오-기획/"},"frontmatter":{"date":"September 28, 2022","title":"포트폴리오 기획","tags":["사이드프로젝트","포트폴리오","기획"],"series":"포트폴리오"}},{"excerpt":"Map과 Set은 자바스크립트의 자료구조로, map은 Object와 유사한 구조를 가지고, Set은 중복을 없애주는 등에 사용된다. 유용한 자료구조이기에 정리를 한번 해보려 한다. Set Set 자료형은 위에 언급한대로 데이터의 중복을 없을 뿐 아니라 배열과 달리 순서를 가지지도 않는 특징을 가진다. 1. Set 만들기 set은 간단하게 class를 사용…","fields":{"slug":"/2022-09-24-Map과Set/"},"frontmatter":{"date":"September 24, 2022","title":"Map과 Set","tags":["javascript"],"series":null}},{"excerpt":"Iteration은 순회라는 뜻으로, 순서대로 item에 접근할 수 있을 때를 의미한다. 앞서 정리한 배열, 문자열는 순회가 가능한데 이렇게 순회가 가능하기 위해서는 iterable protocol을 따라야 한다. Protocol이란 약속이나 규약을 의미하므로 이런 규칙을 따른다는 의미로 이해할 수 있다. 먼저 iterable protocol에 대해 정리…","fields":{"slug":"/2022-09-22-iteration/"},"frontmatter":{"date":"September 22, 2022","title":"Iteration","tags":["javascript","문법"],"series":null}},{"excerpt":"1. 배경 개발자들을 위한 채용공고 정리 서비스는 요즘 다양한 채용공고 플랫폼이 존재한다. 채용 플랫폼마다 공통적으로 있는 공고도 있고, 한 플랫폼에는 있지만 다른 플랫폼에는 없는 채용공고도 있다. 취준생의 입장에서 한 회사의 하나의 채용공고만 보고 고민하는 것이 아니라, 다양한 회사들의 공고를 보았을 때, 어떤 자격 조건이 다른지, 어떤 우대사항이 있는…","fields":{"slug":"/2022-09-22-채용공고-정리사이트-기획/"},"frontmatter":{"date":"September 22, 2022","title":"채용공고 정리 서비스 기획","tags":["사이드프로젝트","기획"],"series":"모으잡"}},{"excerpt":"자바스크립트에서의 배열은 객체로, index를 통해 데이터에 접근할 수 있게 정리해놓은 자료구조이다. 다른 언어들과는 다르게 메모리셀에서 변수들이 연속적으로 저장되어 있지는 않는다. 유용한 자료구조 배열에 대해 알아보자. 1. Array 만들기 배열을 만드는 방법에는 총 4가지 방법이 있다. new Array(size): size만큼의 길이를 가진 배열을…","fields":{"slug":"/2022-09-19-array/"},"frontmatter":{"date":"September 19, 2022","title":"Array","tags":["javascript","문법"],"series":null}},{"excerpt":"객체에는 크게 세 가지로 나뉠 수 있다. 위 그림의 사용자가 정의한 사용자 정의 객체, 브라우저나 node 객체인 Host 객체, 그리고 오늘 정리해볼 Built-in 객체 이다. 빌트인 객체는 자바스크립트 자체적인 객체로 클래스 레벨의 객체를 이용해 객체를 직접 만들지 않고, 바로 사용할 수 있다. 1) Wrapper 객체 앞서 정리해온 원시형 자료형들…","fields":{"slug":"/2022-09-17-빌트인객체/"},"frontmatter":{"date":"September 17, 2022","title":"빌트인 객체","tags":["javascript"],"series":null}},{"excerpt":"어제 정리한 함수에 이어 이번엔 오브젝트를 정리해보고자 한다. 오브젝트는 이어질 클래스와도 많이 연결되어 있으므로 생성자함수 전까지만 정리해보고자 한다. 우선 정리하면서 자주 언급했던 오브젝트는 서로 연관있는 속성(property)과 행동(method)들을 묶어놓은 변수라고 할수있다. 다음과 같이 \"나\"라는 객체에 나에 대한 정보( property)와 내…","fields":{"slug":"/2022-09-14-객체/"},"frontmatter":{"date":"September 14, 2022","title":"객체","tags":["javascript","문법"],"series":null}},{"excerpt":"시작하기 앞서 매일 TIL로 짤막하게 공부한 내용을 정리하려 했지만 하나의 주제의 맥락을 다 담기 힘든 부분이 있어서 작은 주제 하나씩 정하고 글을 써나가 보려 한다. 1) 함수의 정의 함수는 어떠한 하나의 일을 수행할 수 있는 관련 코드들의 모음이라고 할 수 있다. 함수를 잘 작성하면 관련 코드가 한 곳에 모여있기에 유지보수에 유리하고.\n필요할 때마다 …","fields":{"slug":"/2022-09-13-함수/"},"frontmatter":{"date":"September 13, 2022","title":"함수","tags":["javascript"],"series":null}},{"excerpt":"이번주부터는 드림코딩의 브라우저101 강의를 통해 배운 API들과 자바스크립트 문법들을 함께 정리해나가려한다. API API는 application programming interface의 약자로 소프트웨어 내부에 존재하는 기능과 규칙의 집합이다. (출처: MDN API) API라는 단어는 너무 편하게 말하지만 사실 정확히 말하라고 했을 때 모호한 단어였…","fields":{"slug":"/2022-09-12-브라우저API/"},"frontmatter":{"date":"September 12, 2022","title":"Browser API","tags":["javascript","브라우저"],"series":null}},{"excerpt":"추석에 휴일이라 많이 할 수 있을 것이라 생각했지만 그렇게 많은 것은 하지 못했다. 간단히 포트폴리오 강의를 다시 들으면서 intersection observation API를 사용했다. 여전히 어렵고 이해가 잘 안되는 부분이 많아, 예전 TIL을 참고해 다시 한 번 정리해 보고자 한다. 1) API의 배경 Intersection Observer API는…","fields":{"slug":"/2022-09-10-intersection-observer /"},"frontmatter":{"date":"September 10, 2022","title":"Intersection observer","tags":["javascript","브라우저","web"],"series":null}},{"excerpt":"Javascript 어제 공부했던 변수를 이어서 객체와 copy by value와 copy by reference에 대한 공부를 했다. 객체 객체는 key와 value로 이루어진 자료형으로 자바스크립트에서 primitive 자료형을 제외한 함수, 배열과 같은 모든 자료형이 객체로 이루어져있다고 할 수 있다. 객체는 어떠한 데이터와 관련된 상태(proper…","fields":{"slug":"/2022-09-07-자바스트립트의-두가지-복사방법/"},"frontmatter":{"date":"September 07, 2022","title":"자바스크립트의 두가지 복사 방법","tags":["javascript","문법"],"series":null}},{"excerpt":"1. 자바스크립트의 타입 자바스크립트는 dynamic 프로그래밍 language로 동적으로 타입이 결정되는 언어이다. 자바스크립트는 컴파일러가 아니라 interpreter언어이기 때문이다. 위 두가지의 차이를 정리를 해보고자 한다. 컴파일러와 인터프리터 우리가 쓰는 언어 (high-level)를 컴퓨터가 이해할 수 있게 변환해주는 방식에 따라 컴파일러와 …","fields":{"slug":"/2022-09-07-자바스크립트의-타입과연산자/"},"frontmatter":{"date":"September 07, 2022","title":"자바스크립트의 타입과 연산자","tags":["javascript"],"series":null}},{"excerpt":"5 개월 간의 학원에서 강사 생활을 끝내고 이번 주부터 좀 더 집중적으로 개발 공부를 할 수 있게 되었다. 틈틈이 쪼개서 공부하다 보니 공부해 온 것들이 산발 적으로 흩어져 있다는 생각이 들었다. 우선 가장 기본이 되는 HTML, CSS, Javascript에 대한 복습을 했다. HTML과 CSS BEM (Block-Element-Modifier) HTM…","fields":{"slug":"/2022-09-06-BEM과-자료형/"},"frontmatter":{"date":"September 06, 2022","title":"BEM과 자바스크립트의 자료형","tags":["css","javascript","문법"],"series":null}}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}