{"componentChunkName":"component---src-templates-post-jsx","path":"/2024-06-01-2024년-5월회고/","result":{"data":{"site":{"siteMetadata":{"title":"Troy DevLog"}},"markdownRemark":{"id":"4b7beeac-e53e-56b2-b35c-a77e998edb64","excerpt":"5월은 미리 보는 주 4일제처럼 휴일이 많았고 개인적인 일정이 많았던 달이었다. 업무는 4월부터 담당했던 작업들을 마무리하고 성과분석 및 발표를 진행하기도 했다.\n어떤 작업들을 했는지, 4월 회고 때 하기로 마음먹었지만 어떤 건 놓쳤는지 확인해보려 한다. 🤔 4월 회고 돌아보기 4월 회고때 정리한 action item들을 정리해보면 아래와 같다. 화면전환…","html":"<p>5월은 미리 보는 주 4일제처럼 휴일이 많았고 개인적인 일정이 많았던 달이었다. 업무는 4월부터 담당했던 작업들을 마무리하고 성과분석 및 발표를 진행하기도 했다.\n어떤 작업들을 했는지, 4월 회고 때 하기로 마음먹었지만 어떤 건 놓쳤는지 확인해보려 한다.</p>\n<h2>🤔 4월 회고 돌아보기</h2>\n<p>4월 회고때 정리한 action item들을 정리해보면 아래와 같다.</p>\n<ul>\n<li>화면전환 간 성능 개선을 위해 Native Stack 도입 및 성능 분석방법 찾아보기</li>\n<li>에러 바운더리를 조금 더 챕터원들이 쉽게 적용하는 방법 고민해보기</li>\n<li>컴포넌트 설계에 관해 공부하고 정리해보기</li>\n<li>UI 패턴별 최적화 정리해보기</li>\n<li>React 내부 코드 분석해보기</li>\n<li>선언적으로 인증/인가 관리하기</li>\n</ul>\n<p>이중에서 실제로 진행하면서 발생했던 시행착오들과, 하지 못했던 것들을 정리해보려 한다.</p>\n<h3>1. 화면전환 간 성능 개선을 위해 Native Stack 도입 및 성능 분석방법 찾아보기</h3>\n<p>5월은 실제로 기존 StackNavigator에서 NativeStackNavigator로 변경하는 작업을 진행했다. 기존에 stackNavigator는 JS를 통해 만들어지는 반면 NativeStackNavigator는 직접 Native 요소들을 사용하게 구현되어 있기 떄문에\n기존과 다른 인터페이스들을 갖게 되었다. 달라진 인터페이스와 함께 플랫폼별로 다르게 구현되는 부분들 때문에 최대한 기존과 유사한 유저 경험을 줄 수 있게 일일이 확인하고 적용했다.</p>\n<p>이과정에서 다양한 이슈들이 존재했는데 예로, 기존에 card와 modal 간의 이동이 자유로워 card -> m해dal -> card로 화면 전환이 자유로웠던 반면, Native 요소를 이용하면서 Modal이 Navigation의 마지막으로 노출되어야 한다는 규칙에 따라, Modal 뒤에 쌓여 보이지 않는 이슈가 있었다.\n두번째로 화면전환 애니메이션 자체가 달라지거나, 애니메이션 속도가 줄어드는 등 다양한 이슈를 확인하고 대처하는 작업을 진행했다.</p>\n<p>이슈들을 해결하고 나서 성과 분석을 위해 적용 전 제품 내 핵심 퍼널들의 화면 전환들을 비교하보기 위해 영상촬영을 진행하고, 이후 반영된 버전으로 다시 촬영하여 비교해보는 작업을 진행했다.\n추가로 안드로이드만 현재 지원되지만 maestro(e2e 테스트)를 이용한 <a href=\"https://github.com/bamlab/flashlight\">FlashLight</a> 성능 측정을 통해 화면전환간 성능을 측정했다.\n앞서 촬영했던 메인퍼널들에 대한 e2e script를 작성하고 30회 정도 반복 측정을 통해 화면전환간 성능을 측정했다.</p>\n<p>해당 결과는 아직 분석에 시간이 필요해 6월 동안 분석하고 결과를 공유할 예정이다. 6월에는 적용과정에서의 troubleShooting과 성능측정 결과에 대한 글을 작성해보려 한다.</p>\n<h3>2. 에러 바운더리를 조금 더 챕터원들이 쉽게 적용하는 방법 고민해보기</h3>\n<p>에러 바운더리 작업을 제품 내 전체 화면들에 대한 적용을 드디어 완료했다. 지난 회고 때 고민했던 새로운 화면들이 추가되었을 때 어떻게 적용할 수 있을지 고민했던 부분을 위한 작업들도 추가로 진행했다.</p>\n<p>먼저 현재 적용된 화면들과 적용되지 않은 화면들을 알 수 있게 ts-morph를 이용한 script 코드를 작성해 지속해서 에러바운더리가 적용되지 않은 화면들에 대해 체크할 수 있게 했다.</p>\n<p>두 번째로는 동료분께서 주신 아이디어로, 기존 스크린 파일 생성 시 사용하는 템플릿 생성 scrip 코드에 에러바운더리를 적용하는 코드를 추가해, 새로운 화면을 생성할 때 자동으로 에러바운더리가 적용되도록 하는 작업을 진행했다.\n제안 받은 당시에 늘 직접 파일을 생성하고 Navigator에 일일이 추가했었기 때문에 템플릿 생성 script에 추가할 생각을 못했는데, 함께 고민해주신 덕분에 쉽게 적용할 수 있었다.</p>\n<p>이렇게 현재를 기준으로 한 적용 작업 뿐 아니라, 이후 새롭게 추가될 화면들을 위한 작업들도 진행해 조금 더 완성도 있게 마무리할 수 있었다.\n첫 번째 적용되지 않은 화면들을 찾아낼 수 있게 하는 script는 이후 github action을 이용한 CI에 연동해 주기적으로 체크할 수 있게 발전시켜볼 예정이다.</p>\n<p>6월에는 작업 배경, 작업 방식, 결과에 대해 글을 작성해보려 한다.</p>\n<h3>3. 컴포넌트 설계에 관해 공부하고 정리해보기</h3>\n<p>4월에 컴포넌트 설계에 관한 공부가 필요하다 느꼈던 이유는, 스쿼드 기능개발 작업을 진행하면서 여러 도메인에서 공통으로 사용하는 컴포넌트를 다루게 되었기 때문이었다. </p>\n<p>당시 해당 컴포넌트는 1200줄이 넘는 많은 코드들이 하나의 컴포넌트에 담겨있어 한눈에 이해하기가 어려웠고, 자체적으로 API 요청하고 있기 때문에 해당 컴포넌트 밖에서 해당 데이터가 필요할 때 중복 API를 호출해서 사용해야 하는 등의 이슈를 가지고 있었다.</p>\n<p>이러한 이슈들을 해결하기 위해서 서로 다른 도메인과 화면에서 공통으로 사용될 때,제품의 요구사항이 달라졌을 때 유연하면서 확장성 있는 컴포넌트를 만들기 위해 컴포넌트 설계를 공부했고, 이를 적용해보려 했다.</p>\n<p>스쿼드 작업의 여유가 있을 때, 또는 퇴근 후에 리액트 컴포넌트 설계에 대한 강의와 글을 읽으면서 직접 적용하면서 작업을 진행했다. 공부하면서 다양한 컴포넌트 설계 패턴이 있다는 것을 배울 수 있었고 그중에서 <a href=\"https://kentcdodds.com/blog/compound-components-with-react-hooks\"><strong>compound Pattern</strong></a>을 이용한 headless UI를 적용해보았다.</p>\n<p>아직 개선할 부분이 많이 남아있지만 1차적으로 작업을 완료했을 때 컴포넌트 내부 코드가 300줄 이내로 줄어들게 되었고, 보다 유연하게 요구사항들을 반영할 수 있게 수정될 수 있었다.\n이부분도 이후에 조금 더 개선 작업을 추가한 뒤에 글로 작성해보려 한다.</p>\n<h3>하지 못한 UI 패턴별 최적화 정리하기, React 내부 코드 분석하기와 선언적으로 인증/인가 관리하기</h3>\n<p>UI 패턴별 최적화 정리하기와, React 내부 코드 분석하기, 선언적으로 인증/인가 관리하기는 5월에 진행하지 못했다. 스쿼드 업무를 진행하면서 조금씩 정리해보려 했지만 컴포넌트 설계를 공부하고 접목하고 싶은 마음에 해당 일감에 집중하고 우선 미루기로 했다.\n대신 컴포넌트 설계 과정에서 JSX가 실제로 createElement로 컴파일되어 사용된다는 점 등을 배울 수도 있었다.</p>\n<p>5월에는 우선순위에서 밀렸지만, 진행중이던 일감들을 마치는 대로 6월의 action item들로 실행해보려 한다.</p>\n<h2>🚀 5월에 고민을 시작한 일감 및 공부</h2>\n<p>5월은 4월에 고민했던 일감들을 진행하면서 해당 일감들로부터 파생된 일감들을 더 진행하다보니 새로운 주제들을 많이 생각하지 못했다.\n대신 6월이 되면서 다음 분기에 진행하면 좋을 일감들을 현재 챕터 내에서 작성하고 있다. 6월에 진행하지는 않겠지만 7월부터 담당해서 진행하고 싶은 일감들을 아래에 정리해보려 한다.</p>\n<h3>주기적 성능 측정을 위한 CI 구축</h3>\n<p>화면전환 간 성능 개선 작업을 하면서 FlashLight와 maestro를 함께 이용하면서 e2e 테스트를 통해 주요퍼널들에 대한 성능을 측정했다. 이를 CI에 연동해 주기적으로 성능을 측정하고 결과를 버전별로 관리할 수 있다면, 조금 더 의미있게 비교해볼 수 있지 않을까 생각이 들었다.\n물론 e2e 테스트 코드들을 작성해야하는 점, 현재 FlashLight는 android 기기만을 기준으로 측정하는 점 등의 이슈들이 있지만, 기준이 되는 기기에 대해 주기적으로 앱의 성능을 측정한다면 개선할 부분들을 파악하거나, 문제점들을 조금 더 빠르게 파악해\n제품의 안정성에 기여할 수 있겠다는 생각이 들었다.</p>\n<h3>선언적으로 인증/인가 관리하기</h3>\n<p>4월 회고 때 작성했던 부분이지만, 현재 제품 내에서 고객/고수의 경우에만 사용 가능한 화면에서 일일이 인증/인가를 체크하는 부분이 많이 존재한다. 이를 선언적으로 관리하는 방법을 찾아보고 적용해보고 싶다.\n예로 react navigation의 가이드로 <a href=\"https://reactnavigation.org/docs/auth-flow\">Authentication flow</a>를 도입하는 방법 등을 적용해 보고 싶다.</p>\n<h3>AsyncStorage 대체하기</h3>\n<p>현재 제품 내에서 AsyncStorage를 이용해 데이터를 저장하고 있는데, AsyncStorage는 비동기로 동작하기 때문에 데이터를 조회/삭제/변경에 느린 성능이 가지고 있다. 이에 대한 대체재로 <a href=\"https://github.com/mrousavy/react-native-mmkv\">MMKV</a>를 도입해 보고 싶다.</p>\n<p>여기서 어떤 작업들을 담당해서 진행할 수 있을지 모르지만, 3분기에도 계속해서 제품에 다양한 기여해나가는 일들을 진행해보고 싶다.</p>\n<h3>마치며</h3>\n<p>5월은 4월에 이은 작업들이 많았고, 하겠다 선언한 action item들을 많이 진행하지 못했던 것 같다. 하고 싶은 건 많지만, 하나의 일을 제안, 실행, 마무리하는데 까지 시간이 많이 소요되었다.\n6월에는 5월에 하지 못한 일들을 더 집중해서 진행하고, 7월부터는 3분기에 진행할 일들을 미리 정리해서 더욱 더 성장할 수 있도록 노력해보려 한다.</p>","frontmatter":{"title":"🙌 2024년 5월회고","date":"June 01, 2024","tags":["회고"],"series":null},"fields":{"slug":"/2024-06-01-2024년-5월회고/","readingTime":{"minutes":13.95}}},"seriesList":{"edges":[{"node":{"id":"db12bfaf-9b68-5456-b2d3-bf7af6db01f6","fields":{"slug":"/2022-09-06-BEM과-자료형/"},"frontmatter":{"title":"BEM과 자바스크립트의 자료형"}}},{"node":{"id":"11c1a396-7281-552a-9589-6f14d399473b","fields":{"slug":"/2022-09-07-자바스크립트의-타입과연산자/"},"frontmatter":{"title":"자바스크립트의 타입과 연산자"}}},{"node":{"id":"1b75d916-f93f-54a4-bcb0-ee6a88e1e807","fields":{"slug":"/2022-09-07-자바스트립트의-두가지-복사방법/"},"frontmatter":{"title":"자바스크립트의 두가지 복사 방법"}}},{"node":{"id":"3b564afa-9e11-5817-9130-4e2a191f4dff","fields":{"slug":"/2022-09-10-intersection-observer /"},"frontmatter":{"title":"Intersection observer"}}},{"node":{"id":"ac0c72d8-87ec-5038-8d94-316c5fcc3d62","fields":{"slug":"/2022-09-12-브라우저API/"},"frontmatter":{"title":"Browser API"}}},{"node":{"id":"362a634b-e650-5526-851e-d5fbd908dab8","fields":{"slug":"/2022-09-13-함수/"},"frontmatter":{"title":"함수"}}},{"node":{"id":"fa488a20-ff1a-5d21-a871-7cd7a1943bb7","fields":{"slug":"/2022-09-14-객체/"},"frontmatter":{"title":"객체"}}},{"node":{"id":"93e28849-ee68-5f54-a013-82287b705626","fields":{"slug":"/2022-09-17-빌트인객체/"},"frontmatter":{"title":"빌트인 객체"}}},{"node":{"id":"792817ac-87f4-5be2-a7aa-360f10d5c8b4","fields":{"slug":"/2022-09-19-array/"},"frontmatter":{"title":"Array"}}},{"node":{"id":"b9665749-4456-51bc-8980-7b1df634660e","fields":{"slug":"/2022-09-22-iteration/"},"frontmatter":{"title":"Iteration"}}},{"node":{"id":"b36e6692-59b2-579e-a86a-a032da431840","fields":{"slug":"/2022-09-24-Map과Set/"},"frontmatter":{"title":"Map과 Set"}}},{"node":{"id":"483fabc0-6bc7-5db7-9654-84987635add6","fields":{"slug":"/2022-10-06-HTTP란/"},"frontmatter":{"title":"HTTP 정리"}}},{"node":{"id":"197d4909-e862-5b9a-8676-b53e027e5379","fields":{"slug":"/2022-10-18-Node-JS-기초/"},"frontmatter":{"title":"Node js:NodeJS 이용한 서버 만들기"}}},{"node":{"id":"bd10a339-6c06-5837-862e-192c45081282","fields":{"slug":"/2022-10-19-Express-기초/"},"frontmatter":{"title":"NodeJS: express"}}},{"node":{"id":"8195c683-dc7e-58d3-b7b6-c5a1e78b6522","fields":{"slug":"/2022-11-18-CSR과-SSR/"},"frontmatter":{"title":"CSR과 SSR 그리고 Universal Rendering"}}},{"node":{"id":"f05c2eb8-16da-5e6e-a906-bbdffa05ace6","fields":{"slug":"/2022-11-20-스코프-실행컨테스트-클로저/"},"frontmatter":{"title":"스코프,실행컨텍스트,클로저"}}},{"node":{"id":"24ec8ed8-dfae-5619-8c64-df914805c0eb","fields":{"slug":"/2022-11-24-Critical-Rendering-Path/"},"frontmatter":{"title":"💻 Critical Rendering Path"}}},{"node":{"id":"c32a9017-54df-5eb4-98cd-5eba4b9ae41c","fields":{"slug":"/2022-11-27-비동기와-프로미스/"},"frontmatter":{"title":"비동기와 프로미스"}}},{"node":{"id":"364cb56c-45fc-52dc-8311-0f61a88dfdfe","fields":{"slug":"/2022-11-30-지스트-청원-서비스-회고/"},"frontmatter":{"title":"지스트 청원서비스 회고"}}},{"node":{"id":"40c2d20c-04f0-5876-aee6-be5b43bce78a","fields":{"slug":"/2022-12-02-제너레이터와-async-await/"},"frontmatter":{"title":"제너레이터와 Async-Await"}}},{"node":{"id":"4ed9db58-39c3-5f21-ad1e-59be0b94e988","fields":{"slug":"/2022-12-03-모으잡-리팩토링/"},"frontmatter":{"title":"모으잡-check box 수정, react-query 커스텀 훅, 크롤링 이슈"}}},{"node":{"id":"937a4bc1-5318-52a9-b6fd-61188127ce23","fields":{"slug":"/2022-12-05-호이스팅/"},"frontmatter":{"title":"호이스팅"}}},{"node":{"id":"09bdd07c-e41f-573e-bd66-71c526ab83f8","fields":{"slug":"/2022-12-09-쿠키-session-jwt/"},"frontmatter":{"title":"Cookie,Session과 JWT"}}},{"node":{"id":"b552cf79-29a8-5e87-a162-c03661121fb6","fields":{"slug":"/2022-12-09-this/"},"frontmatter":{"title":"this"}}},{"node":{"id":"05a00e19-f52a-5596-a97e-4f7390b20119","fields":{"slug":"/2022-12-10-http와https/"},"frontmatter":{"title":"http와 https"}}},{"node":{"id":"b91bff56-be62-5318-b6f1-dc3ddc789d08","fields":{"slug":"/2022-12-12-생성자함수-프로토타입/"},"frontmatter":{"title":"생성자 함수, 프로토타입"}}},{"node":{"id":"3b7d6329-680d-5db9-8ee6-cb15da44b6a8","fields":{"slug":"/2022-12-30-이벤트/"},"frontmatter":{"title":"이벤트"}}},{"node":{"id":"a94c02b8-45b0-5fac-b129-cf99c64a8f24","fields":{"slug":"/2022-12-23-class/"},"frontmatter":{"title":"클래스"}}},{"node":{"id":"d1dc9a50-2824-5859-826f-ceb445994e93","fields":{"slug":"/2023-01-23-리액트의-기본원리/"},"frontmatter":{"title":"React study: 리액트의 기본 원리"}}},{"node":{"id":"8dd5dd72-0262-582e-8a1d-33fd6b2245f3","fields":{"slug":"/2023-01-23-Vite와-번들러/"},"frontmatter":{"title":"Vite는 왜 빠를까, 번들러에 대한 정리"}}},{"node":{"id":"2cd6faf4-d340-58ee-a4bc-c4b16bc21c42","fields":{"slug":"/2022-12-20-리액트-성능보장/"},"frontmatter":{"title":"React study: 리액트가 성능을 보장하는 방법"}}},{"node":{"id":"717eb8fb-45a2-5fef-aaa9-c5c5eceb792a","fields":{"slug":"/2023-02-03-useState,useEffect, useRef, memo/"},"frontmatter":{"title":"React Study: useState, useEffect, useRef, memo"}}},{"node":{"id":"26ed4c76-848a-56e4-ae68-7e879e23bf77","fields":{"slug":"/2023-02-17-취업준비-회고/"},"frontmatter":{"title":"신입으로 시작하며 작성하는 취준 회고"}}},{"node":{"id":"166ce257-9146-51aa-a470-57c257844c07","fields":{"slug":"/2023-02-21-google.com-입력했을때-일어나는-일/"},"frontmatter":{"title":"google.com를 브라우저에 검색했을 때 일어나는 일"}}},{"node":{"id":"aaa88fe5-37a4-5ff4-9de2-959da89dcd86","fields":{"slug":"/2023-03-01-CDN/"},"frontmatter":{"title":"CDN은 뭘까?"}}},{"node":{"id":"f2fa5329-7ce4-5a65-9e28-0e4b1d188a6c","fields":{"slug":"/2023-03-05-디자인패턴/"},"frontmatter":{"title":"MVC, MVVM, Flux패턴 그리고 Service와 Repository 패턴"}}},{"node":{"id":"543681af-5db3-518d-b19e-7668efdda7fc","fields":{"slug":"/2023-03-31-2023년-3월회고/"},"frontmatter":{"title":"🐤 2023년 3월 회고"}}},{"node":{"id":"eecd0175-5be8-556d-a36a-756d4af0700b","fields":{"slug":"/2023-05-06-2023년-4월회고/"},"frontmatter":{"title":"😎 2023년 4월 회고"}}},{"node":{"id":"055d38ec-e2c0-5a63-aa95-fbc147365d29","fields":{"slug":"/2023-06-05-2023년-5월회고/"},"frontmatter":{"title":"☀︎ 2023년 5월 회고"}}},{"node":{"id":"32156a84-756c-50c3-bd9f-77b3dc2e7547","fields":{"slug":"/2023-07-06-2023년-6월회고/"},"frontmatter":{"title":"☼ 2023년 6월 회고"}}},{"node":{"id":"5438a45e-764a-5e14-b5ba-b71f4ba8be23","fields":{"slug":"/2023-08-09-2023년-7월회고/"},"frontmatter":{"title":"☂︎ 2023년 7월 회고"}}},{"node":{"id":"7a788f0b-75af-5eac-b509-fd0d3f119d98","fields":{"slug":"/2023-09-09-2023년-8월회고/"},"frontmatter":{"title":"😊 2023년 8월 회고"}}},{"node":{"id":"d47fe7ea-21c5-5c88-b64e-e34021957c29","fields":{"slug":"/2023-10-03-2023년-9월회고/"},"frontmatter":{"title":"🚅 2023년 9월 회고"}}},{"node":{"id":"4268b04a-703c-5bd0-8081-e900ee0ce15c","fields":{"slug":"/2023-11-01-2023년-10월회고/"},"frontmatter":{"title":"🧐 2023년 10월 회고"}}},{"node":{"id":"01c028b9-d56c-52a8-8719-eb5cbcf6ea70","fields":{"slug":"/2023-12-02-2023년-11월회고/"},"frontmatter":{"title":"😃 2023년 11월 회고"}}},{"node":{"id":"e696cf5b-451a-5fe0-a2cb-100a22d3d356","fields":{"slug":"/2023-12-31-2023년-12월회고/"},"frontmatter":{"title":"🌟 2023년 12월 회고"}}},{"node":{"id":"b0eb4259-0e5c-53fd-9fdc-cd5e53336653","fields":{"slug":"/2024-02-07-2024년-1월회고/"},"frontmatter":{"title":"🐥 2024년 1월회고"}}},{"node":{"id":"e7e95438-a61a-5b79-b114-ba3d8026517d","fields":{"slug":"/2024-03-02-2024년-2월회고/"},"frontmatter":{"title":"🙊 2024년 2월회고"}}},{"node":{"id":"1bc07ca5-bb4e-5644-a20e-a011d944706b","fields":{"slug":"/2024-03-03-자바스크립트의-동시성-이해하기/"},"frontmatter":{"title":"Promise.all의 동시성 이해하기"}}},{"node":{"id":"bb2429ab-4ef6-53ad-950b-f49dae0134da","fields":{"slug":"/2024-03-30-App-StartUp-time-개선/"},"frontmatter":{"title":"App StartUp time 개선"}}},{"node":{"id":"a20bddb0-3f08-5708-81e9-73695d6250c7","fields":{"slug":"/2024-04-07-2024년-3월회고/"},"frontmatter":{"title":"🙌 2024년 3월회고"}}},{"node":{"id":"1e59eab7-ece6-5711-97f8-273322a2644b","fields":{"slug":"/2024-04-21-onViewableItemsChanged-이해해보기/"},"frontmatter":{"title":"👀 onViewableItemsChanged 이해해보기"}}},{"node":{"id":"a96d70dd-918a-592f-b9a9-4300903c6dd2","fields":{"slug":"/2024-05-01-2024년-4월회고/"},"frontmatter":{"title":"🙌 2024년 4월회고"}}},{"node":{"id":"4b7beeac-e53e-56b2-b35c-a77e998edb64","fields":{"slug":"/2024-06-01-2024년-5월회고/"},"frontmatter":{"title":"🙌 2024년 5월회고"}}},{"node":{"id":"2fd67da4-b9da-54bb-8fac-9974572e6e56","fields":{"slug":"/2024-06-02-에러바운더리-도입하기/"},"frontmatter":{"title":"✅ 에러바운더리 도입하기"}}},{"node":{"id":"976d3bb5-2ac5-5164-9e34-ecda451f70f4","fields":{"slug":"/2024-06-30-2024년-6월회고/"},"frontmatter":{"title":"🤭 2024년 6월회고"}}},{"node":{"id":"f326c8c4-4a20-548d-86bf-35bd5ed917e0","fields":{"slug":"/2024-06-30-NativeStack적용하기/"},"frontmatter":{"title":"🖥️ Native Stack 적용하기"}}},{"node":{"id":"b61202c0-e758-5ab4-b8fb-ef238cfe39ee","fields":{"slug":"/2024-08-03-2024년-7월회고/"},"frontmatter":{"title":"👏 2024년 7월회고 "}}},{"node":{"id":"ee15b1b5-e849-59af-843e-f4c8917a81d9","fields":{"slug":"/2024-09-15-2024년-8월회고/"},"frontmatter":{"title":"🥳 2024년 8월회고 "}}},{"node":{"id":"8fb916d1-72dc-5f0d-88cb-e8a54ddb0259","fields":{"slug":"/2024-09-17-useFunnel-분석해보기/"},"frontmatter":{"title":"📚 useFunnel 분석하고 따라 만들어 보기"}}}]},"previous":{"fields":{"slug":"/2024-05-01-2024년-4월회고/"},"frontmatter":{"title":"🙌 2024년 4월회고"}},"next":{"fields":{"slug":"/2024-06-02-에러바운더리-도입하기/"},"frontmatter":{"title":"✅ 에러바운더리 도입하기"}}},"pageContext":{"id":"4b7beeac-e53e-56b2-b35c-a77e998edb64","series":null,"previousPostId":"a96d70dd-918a-592f-b9a9-4300903c6dd2","nextPostId":"2fd67da4-b9da-54bb-8fac-9974572e6e56"}},"staticQueryHashes":[],"slicesMap":{}}