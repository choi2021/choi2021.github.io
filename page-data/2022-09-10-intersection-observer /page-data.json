{"componentChunkName":"component---src-templates-post-jsx","path":"/2022-09-10-intersection-observer /","result":{"data":{"site":{"siteMetadata":{"title":"Troy DevLog"}},"markdownRemark":{"id":"3b564afa-9e11-5817-9130-4e2a191f4dff","excerpt":"추석에 휴일이라 많이 할 수 있을 것이라 생각했지만 그렇게 많은 것은 하지 못했다. 간단히 포트폴리오 강의를 다시 들으면서 intersection observation API를 사용했다. 여전히 어렵고 이해가 잘 안되는 부분이 많아, 예전 TIL을 참고해 다시 한 번 정리해 보고자 한다. 1) API의 배경 Intersection Observer API는…","html":"<p>추석에 휴일이라 많이 할 수 있을 것이라 생각했지만 그렇게 많은 것은 하지 못했다.</p>\n<p>간단히 포트폴리오 강의를 다시 들으면서 intersection observation API를 사용했다.</p>\n<p>여전히 어렵고 이해가 잘 안되는 부분이 많아, 예전 TIL을 참고해 다시 한 번 정리해 보고자 한다.</p>\n<h3>1) API의 배경</h3>\n<p>Intersection Observer API는 브라우저 API로 이전에 사용했던 방식 (getBoundingClientRect와 스크롤과 연결)을 사용할 때</p>\n<p>scroll 이벤트의 경우에 eventListener와 연결하게 되었을 때, 자주 발생하는 event인데, 그때마다 우리가 원하는 요소의</p>\n<p>크기를 불러오기 위한 getBoundingClientRect로 layout을 계속 불러오게 된다.</p>\n<p>이로인한 성능저하를 해결하기 위한 API가 바로 <strong>Intersection Observer</strong>이다.</p>\n<h3>2) API의구성</h3>\n<p>intersectionObserver 오브젝트에는 observer가 observe하고 있는 DOM 요소에 intersection이 발생했을 때 실행할 <strong>callback함수</strong>와 Observer의 요소, 크기, 기준등을 어떻게 설정할지를 담고있는 <strong>option</strong>이다.</p>\n<h4>Option</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> option<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n <span class=\"token literal-property property\">root</span><span class=\"token operator\">:</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span>\n <span class=\"token literal-property property\">rootMargin</span><span class=\"token operator\">:</span><span class=\"token string\">\"0px\"</span><span class=\"token punctuation\">,</span>\n <span class=\"token literal-property property\">threshold</span><span class=\"token operator\">:</span><span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>root는 관찰하는 영역으로 null로 전달시 사용자의 화면, viewport를 의미한다. 위 코드와 같이 DOM요소를 전달하면 DOM요소의 영역을</p>\n<p>기준으로 관찰한다.</p>\n<p>rootMargin은 내가 전한 영역에 margin을 주어서 주어진 margin을 포함한 만큼을 기준으로 삼는다. 예시로 사용자가 봐야할 화면을 미리 준비할 때 크기를 넓혀 화면을 미리 준비 할 수 있다.</p>\n<p>threshold는 관찰하는 영역에 어느정도 들어왔을 때, callback함수를 실행할지를 담고 있다. 0~1까지 숫자로 전달할 때 들어올 때는 값을 그대로 사용하고, 반대로 나가는 상태에서는 1-threshold값을 사용한다.</p>\n<h4>callback function</h4>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">callback</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">entries<span class=\"token punctuation\">,</span> observer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  entries<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entry</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// observer과 관찰하는 대상의 정보</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>callback 함수는 entries와 observer를 인자로 받는 함수로, entries는 관찰하고 있는 대상의 정보를 담고 있는 배열이다. 배열 내에 관찰하는 item들의 객체에는 <strong>boundingClientRect</strong>로 관찰하고 있는 요소의 위치,크기와 같은 정보를 주고, <strong>intersectionRatio</strong>로 현재 영역에 얼마만큼 들어와 있는지, <strong>isIntersecting</strong>으로 앞으로 들어올 대상인지 이미 보이고 있어서 사라질 지를 알려준다. 이외에도 대상의 다양한 정보들을 담고 있다.</p>\n<p>observer를 쓰는 예제는 아직 보지 못해 사용하지 않았다.</p>\n<h3>Observer</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> observer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IntersectionObserver</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">,</span> option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sections <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.section'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsections<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">section</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  observer<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>앞서 알아본 callback과 option을 observer에 전달하면 observer.observe()의 인자로 대상을 전달해 관찰할 수 있다.</p>\n<p>위와 같은 3가지 요소를 이용해 API를 사용할 수 있다. 이때 활용할 수 있을 요소는 다양하지만 아직 부족해 다시 포트폴리오 페이지를</p>\n<p>React를 이용해 만들 때, 더 자세히 공부해보고자 한다.</p>","frontmatter":{"title":"Intersection observer","date":"September 10, 2022","tags":["javascript","브라우저","web"],"series":null},"fields":{"slug":"/2022-09-10-intersection-observer /","readingTime":{"minutes":3.965}}},"seriesList":{"edges":[{"node":{"id":"db12bfaf-9b68-5456-b2d3-bf7af6db01f6","fields":{"slug":"/2022-09-06-BEM과-자료형/"},"frontmatter":{"title":"BEM과 자바스크립트의 자료형"}}},{"node":{"id":"11c1a396-7281-552a-9589-6f14d399473b","fields":{"slug":"/2022-09-07-자바스크립트의-타입과연산자/"},"frontmatter":{"title":"자바스크립트의 타입과 연산자"}}},{"node":{"id":"1b75d916-f93f-54a4-bcb0-ee6a88e1e807","fields":{"slug":"/2022-09-07-자바스트립트의-두가지-복사방법/"},"frontmatter":{"title":"자바스크립트의 두가지 복사 방법"}}},{"node":{"id":"3b564afa-9e11-5817-9130-4e2a191f4dff","fields":{"slug":"/2022-09-10-intersection-observer /"},"frontmatter":{"title":"Intersection observer"}}},{"node":{"id":"ac0c72d8-87ec-5038-8d94-316c5fcc3d62","fields":{"slug":"/2022-09-12-브라우저API/"},"frontmatter":{"title":"Browser API"}}},{"node":{"id":"362a634b-e650-5526-851e-d5fbd908dab8","fields":{"slug":"/2022-09-13-함수/"},"frontmatter":{"title":"함수"}}},{"node":{"id":"fa488a20-ff1a-5d21-a871-7cd7a1943bb7","fields":{"slug":"/2022-09-14-객체/"},"frontmatter":{"title":"객체"}}},{"node":{"id":"93e28849-ee68-5f54-a013-82287b705626","fields":{"slug":"/2022-09-17-빌트인객체/"},"frontmatter":{"title":"빌트인 객체"}}},{"node":{"id":"792817ac-87f4-5be2-a7aa-360f10d5c8b4","fields":{"slug":"/2022-09-19-array/"},"frontmatter":{"title":"Array"}}},{"node":{"id":"b9665749-4456-51bc-8980-7b1df634660e","fields":{"slug":"/2022-09-22-iteration/"},"frontmatter":{"title":"Iteration"}}},{"node":{"id":"b36e6692-59b2-579e-a86a-a032da431840","fields":{"slug":"/2022-09-24-Map과Set/"},"frontmatter":{"title":"Map과 Set"}}},{"node":{"id":"483fabc0-6bc7-5db7-9654-84987635add6","fields":{"slug":"/2022-10-06-HTTP란/"},"frontmatter":{"title":"HTTP 정리"}}},{"node":{"id":"197d4909-e862-5b9a-8676-b53e027e5379","fields":{"slug":"/2022-10-18-Node-JS-기초/"},"frontmatter":{"title":"Node js:NodeJS 이용한 서버 만들기"}}},{"node":{"id":"bd10a339-6c06-5837-862e-192c45081282","fields":{"slug":"/2022-10-19-Express-기초/"},"frontmatter":{"title":"NodeJS: express"}}},{"node":{"id":"8195c683-dc7e-58d3-b7b6-c5a1e78b6522","fields":{"slug":"/2022-11-18-CSR과-SSR/"},"frontmatter":{"title":"CSR과 SSR 그리고 Universal Rendering"}}},{"node":{"id":"f05c2eb8-16da-5e6e-a906-bbdffa05ace6","fields":{"slug":"/2022-11-20-스코프-실행컨테스트-클로저/"},"frontmatter":{"title":"스코프,실행컨텍스트,클로저"}}},{"node":{"id":"24ec8ed8-dfae-5619-8c64-df914805c0eb","fields":{"slug":"/2022-11-24-Critical-Rendering-Path/"},"frontmatter":{"title":"💻 Critical Rendering Path"}}},{"node":{"id":"c32a9017-54df-5eb4-98cd-5eba4b9ae41c","fields":{"slug":"/2022-11-27-비동기와-프로미스/"},"frontmatter":{"title":"비동기와 프로미스"}}},{"node":{"id":"364cb56c-45fc-52dc-8311-0f61a88dfdfe","fields":{"slug":"/2022-11-30-지스트-청원-서비스-회고/"},"frontmatter":{"title":"지스트 청원서비스 회고"}}},{"node":{"id":"40c2d20c-04f0-5876-aee6-be5b43bce78a","fields":{"slug":"/2022-12-02-제너레이터와-async-await/"},"frontmatter":{"title":"제너레이터와 Async-Await"}}},{"node":{"id":"4ed9db58-39c3-5f21-ad1e-59be0b94e988","fields":{"slug":"/2022-12-03-모으잡-리팩토링/"},"frontmatter":{"title":"모으잡-check box 수정, react-query 커스텀 훅, 크롤링 이슈"}}},{"node":{"id":"937a4bc1-5318-52a9-b6fd-61188127ce23","fields":{"slug":"/2022-12-05-호이스팅/"},"frontmatter":{"title":"호이스팅"}}},{"node":{"id":"09bdd07c-e41f-573e-bd66-71c526ab83f8","fields":{"slug":"/2022-12-09-쿠키-session-jwt/"},"frontmatter":{"title":"Cookie,Session과 JWT"}}},{"node":{"id":"b552cf79-29a8-5e87-a162-c03661121fb6","fields":{"slug":"/2022-12-09-this/"},"frontmatter":{"title":"this"}}},{"node":{"id":"05a00e19-f52a-5596-a97e-4f7390b20119","fields":{"slug":"/2022-12-10-http와https/"},"frontmatter":{"title":"http와 https"}}},{"node":{"id":"b91bff56-be62-5318-b6f1-dc3ddc789d08","fields":{"slug":"/2022-12-12-생성자함수-프로토타입/"},"frontmatter":{"title":"생성자 함수, 프로토타입"}}},{"node":{"id":"3b7d6329-680d-5db9-8ee6-cb15da44b6a8","fields":{"slug":"/2022-12-30-이벤트/"},"frontmatter":{"title":"이벤트"}}},{"node":{"id":"a94c02b8-45b0-5fac-b129-cf99c64a8f24","fields":{"slug":"/2022-12-23-class/"},"frontmatter":{"title":"클래스"}}},{"node":{"id":"d1dc9a50-2824-5859-826f-ceb445994e93","fields":{"slug":"/2023-01-23-리액트의-기본원리/"},"frontmatter":{"title":"React study: 리액트의 기본 원리"}}},{"node":{"id":"8dd5dd72-0262-582e-8a1d-33fd6b2245f3","fields":{"slug":"/2023-01-23-Vite와-번들러/"},"frontmatter":{"title":"Vite는 왜 빠를까, 번들러에 대한 정리"}}},{"node":{"id":"2cd6faf4-d340-58ee-a4bc-c4b16bc21c42","fields":{"slug":"/2022-12-20-리액트-성능보장/"},"frontmatter":{"title":"React study: 리액트가 성능을 보장하는 방법"}}},{"node":{"id":"717eb8fb-45a2-5fef-aaa9-c5c5eceb792a","fields":{"slug":"/2023-02-03-useState,useEffect, useRef, memo/"},"frontmatter":{"title":"React Study: useState, useEffect, useRef, memo"}}},{"node":{"id":"26ed4c76-848a-56e4-ae68-7e879e23bf77","fields":{"slug":"/2023-02-17-취업준비-회고/"},"frontmatter":{"title":"신입으로 시작하며 작성하는 취준 회고"}}},{"node":{"id":"166ce257-9146-51aa-a470-57c257844c07","fields":{"slug":"/2023-02-21-google.com-입력했을때-일어나는-일/"},"frontmatter":{"title":"google.com를 브라우저에 검색했을 때 일어나는 일"}}},{"node":{"id":"aaa88fe5-37a4-5ff4-9de2-959da89dcd86","fields":{"slug":"/2023-03-01-CDN/"},"frontmatter":{"title":"CDN은 뭘까?"}}},{"node":{"id":"f2fa5329-7ce4-5a65-9e28-0e4b1d188a6c","fields":{"slug":"/2023-03-05-디자인패턴/"},"frontmatter":{"title":"MVC, MVVM, Flux패턴 그리고 Service와 Repository 패턴"}}},{"node":{"id":"543681af-5db3-518d-b19e-7668efdda7fc","fields":{"slug":"/2023-03-31-2023년-3월회고/"},"frontmatter":{"title":"🐤 2023년 3월 회고"}}},{"node":{"id":"eecd0175-5be8-556d-a36a-756d4af0700b","fields":{"slug":"/2023-05-06-2023년-4월회고/"},"frontmatter":{"title":"😎 2023년 4월 회고"}}},{"node":{"id":"055d38ec-e2c0-5a63-aa95-fbc147365d29","fields":{"slug":"/2023-06-05-2023년-5월회고/"},"frontmatter":{"title":"☀︎ 2023년 5월 회고"}}},{"node":{"id":"32156a84-756c-50c3-bd9f-77b3dc2e7547","fields":{"slug":"/2023-07-06-2023년-6월회고/"},"frontmatter":{"title":"☼ 2023년 6월 회고"}}},{"node":{"id":"5438a45e-764a-5e14-b5ba-b71f4ba8be23","fields":{"slug":"/2023-08-09-2023년-7월회고/"},"frontmatter":{"title":"☂︎ 2023년 7월 회고"}}},{"node":{"id":"7a788f0b-75af-5eac-b509-fd0d3f119d98","fields":{"slug":"/2023-09-09-2023년-8월회고/"},"frontmatter":{"title":"😊 2023년 8월 회고"}}},{"node":{"id":"d47fe7ea-21c5-5c88-b64e-e34021957c29","fields":{"slug":"/2023-10-03-2023년-9월회고/"},"frontmatter":{"title":"🚅 2023년 9월 회고"}}},{"node":{"id":"4268b04a-703c-5bd0-8081-e900ee0ce15c","fields":{"slug":"/2023-11-01-2023년-10월회고/"},"frontmatter":{"title":"🧐 2023년 10월 회고"}}},{"node":{"id":"01c028b9-d56c-52a8-8719-eb5cbcf6ea70","fields":{"slug":"/2023-12-02-2023년-11월회고/"},"frontmatter":{"title":"😃 2023년 11월 회고"}}},{"node":{"id":"e696cf5b-451a-5fe0-a2cb-100a22d3d356","fields":{"slug":"/2023-12-31-2023년-12월회고/"},"frontmatter":{"title":"🌟 2023년 12월 회고"}}},{"node":{"id":"b0eb4259-0e5c-53fd-9fdc-cd5e53336653","fields":{"slug":"/2024-02-07-2024년-1월회고/"},"frontmatter":{"title":"🐥 2024년 1월회고"}}},{"node":{"id":"e7e95438-a61a-5b79-b114-ba3d8026517d","fields":{"slug":"/2024-03-02-2024년-2월회고/"},"frontmatter":{"title":"🙊 2024년 2월회고"}}},{"node":{"id":"1bc07ca5-bb4e-5644-a20e-a011d944706b","fields":{"slug":"/2024-03-03-자바스크립트의-동시성-이해하기/"},"frontmatter":{"title":"Promise.all의 동시성 이해하기"}}},{"node":{"id":"bb2429ab-4ef6-53ad-950b-f49dae0134da","fields":{"slug":"/2024-03-30-App-StartUp-time-개선/"},"frontmatter":{"title":"App StartUp time 개선"}}},{"node":{"id":"a20bddb0-3f08-5708-81e9-73695d6250c7","fields":{"slug":"/2024-04-07-2024년-3월회고/"},"frontmatter":{"title":"🙌 2024년 3월회고"}}},{"node":{"id":"1e59eab7-ece6-5711-97f8-273322a2644b","fields":{"slug":"/2024-04-21-onViewableItemsChanged-이해해보기/"},"frontmatter":{"title":"👀 onViewableItemsChanged 이해해보기"}}},{"node":{"id":"a96d70dd-918a-592f-b9a9-4300903c6dd2","fields":{"slug":"/2024-05-01-2024년-4월회고/"},"frontmatter":{"title":"🙌 2024년 4월회고"}}},{"node":{"id":"4b7beeac-e53e-56b2-b35c-a77e998edb64","fields":{"slug":"/2024-06-01-2024년-5월회고/"},"frontmatter":{"title":"🙌 2024년 5월회고"}}},{"node":{"id":"2fd67da4-b9da-54bb-8fac-9974572e6e56","fields":{"slug":"/2024-06-02-에러바운더리-도입하기/"},"frontmatter":{"title":"✅ 에러바운더리 도입하기"}}},{"node":{"id":"976d3bb5-2ac5-5164-9e34-ecda451f70f4","fields":{"slug":"/2024-06-30-2024년-6월회고/"},"frontmatter":{"title":"🤭 2024년 6월회고"}}}]},"previous":{"fields":{"slug":"/2022-09-07-자바스트립트의-두가지-복사방법/"},"frontmatter":{"title":"자바스크립트의 두가지 복사 방법"}},"next":{"fields":{"slug":"/2022-09-12-브라우저API/"},"frontmatter":{"title":"Browser API"}}},"pageContext":{"id":"3b564afa-9e11-5817-9130-4e2a191f4dff","series":null,"previousPostId":"1b75d916-f93f-54a4-bcb0-ee6a88e1e807","nextPostId":"ac0c72d8-87ec-5038-8d94-316c5fcc3d62"}},"staticQueryHashes":[],"slicesMap":{}}